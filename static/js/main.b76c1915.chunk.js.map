{"version":3,"sources":["Components/ChemicalElement.js","Components/Square.js","Components/Matrix.js","Components/AppHeader.js","Components/Footer.js","Components/Instructions.js","Components/EndOfGame.js","App.js","serviceWorker.js","index.js"],"names":["ChemicalElement","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setInputShadow","state","setState","inputShadow","setShake","shake","modalInfo","title","description","react_default","a","createElement","className","checkShake","props","elementsToGuess","index","findIndex","element","id","atomic","guessed","similarity","s1","s2","longer","shorter","length","longerLength","editDistance","parseFloat","costs","Array","i","lastValue","j","newValue","charAt","Math","min","textChange","event","handleTextChange","target","value","eventValue","toLowerCase","normalize","replace","stateValue","name","console","log","undefined","updateElementsToGuess","setCuriousFact","nameValue","inputText","concat","placeholder","onChange","card","window","innerWidth","cssStyle","symbol","onClick","toggleModalChemicalElementInformation","modalChemicalElementInformation","bind","assertThisInitialized","_this$state","closeChemicalElementModal","setCloseChemicalElementModal","class","chemicalElementGroupName","text","atomicNumber","atomicMass","mass","electronicConfiguration","electronicConf","electronegativity","atomicRadius","ionRadius","ionicRadius","vanDelWaalsRadius","vanDerWaalsRadius","ionizationEnergy","ionicEnergic","electronAffinity","electronicAffinity","oxidationStates","oxidationState","Component","Square","emptySquare","tinySquare","getElement","assign","chemicalElements","find","item","positionOfSquareInFormat","lenguage","elementSpanish","chemicalElementsSpanish","group","prettyGroupName","Components_ChemicalElement","updateSelectedElements","chemicalElement","require","groupName","toUpperCase","slice","indicator","indexOf","substr","Matrix","setGeneratedSelectedElements","generatedSelectedElements","generatedList","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","createElementsToGuess","stop","frameOfMatrix","position","contend","numberOfColumns","columnsQuantity","matrixFormat","listOfColumnsId","apply","map","Number","column","matrixRows","rowFormat","pos","cellIndex","Components_Square","selectedElements","AppHeader","setTitle","elements","toggleLanguage","language","setLanguage","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","Footer","setShowSettings","Modal","returnElement","elementTitle","changeLanguage","howToPlay","chooseLanguage","aboutTheAuthor","exit","back","instructionHowToPlay1","instructionHowToPlay2","instructionHowToPlay3","language1","language2","author1","author2","modalTitle","modalTittle","handleLenguageChange","changeEvent","toggleLenguage","settings","toggleShowHowToPlay","toggleShowChooseLenguage","toggleShowAboutTheAuthor","type","checked","for","modal","showHowtoPlay","showAboutTheAuthor","showChooseLenguage","showInstructions","howToPlay1","howToPlay2","howToPlay3","toggleShowInstructions","toggleModalTittle","showSettings","EndOfGame","setTime","time","setMinutes","minutes","setSeconds","seconds","setObjetiveCompleted","objetiveCompleted","setPlayAgain","playAgain","showTime","timeElapsed","reloadPage","location","reload","setStateEndOfGame","showModal","App","setEndOfGame","endOfGame","setElementsToGuess","arr","floor","random","curiousFact","push","attribute","checkElementsGuessState","every","timeElapsedMillis","abs","Date","startTime","millisToMinutesAndSeconds","toggleText","textSpanish","textEnglish","millis","toFixed","Components_AppHeader","appHeader","Components_Matrix","elementModal","Components_Footer","footer","Instructions","instructions","Components_EndOfGame","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b76c1915.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { PropTypes } from \"prop-types\";\r\nimport './../css/index.css'\r\nimport './../css/colorsOfTheElements.css'\r\nimport './../css/chemicalElement.css'\r\n\r\nclass ChemicalElement extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            modalChemicalElementInformation : false, \r\n            shake : undefined,\r\n            nameValue : undefined, \r\n            inputShadow : undefined\r\n        }\r\n\r\n        this.toggleModalChemicalElementInformation = this.toggleModalChemicalElementInformation.bind(this);\r\n        this.shake = this.setShake.bind(this);\r\n        this.nameValue = this.handleTextChange.bind(this);\r\n        this.inputShadow = this.setInputShadow.bind(this);\r\n    }\r\n\r\n    \r\n\r\n    setInputShadow = (state) => {\r\n        this.setState({\r\n            inputShadow: state\r\n        });\r\n    }\r\n\r\n    setShake = (state) => {\r\n        this.setState({\r\n            shake: state\r\n        });\r\n    }\r\n\r\n    toggleModalChemicalElementInformation(){\r\n        this.setState({\r\n            modalChemicalElementInformation: !this.state.modalChemicalElementInformation\r\n        });\r\n    }\r\n\r\n\r\n    modalInfo = (title, description) => {\r\n        return(\r\n            <div className={'box-body-information'}>\r\n                <div className={'box-body-information-key'}>\r\n                    {title}\r\n                </div>\r\n                <div className={'box-body-information-value'}>\r\n                    {description} \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    checkShake = () => {\r\n        let shake = null\r\n        /*\r\n        if (this.props.selectedElements){\r\n            \r\n            shake = this.props.selectedElements.indexOf(this.props.element.atomic) === -1 ? false : \"shake\" ;\r\n            \r\n            if (shake){\r\n                this.setShake(true);\r\n            }\r\n        }\r\n        */\r\n\r\n        \r\n        if (this.props.elementsToGuess){\r\n            const index = this.props.elementsToGuess.findIndex(element => element.id === this.props.element.atomic);\r\n            const shakeA = index === -1 ? false : true ;\r\n            \r\n            if (shakeA && !this.props.elementsToGuess[index].guessed){\r\n                this.setShake(true);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    similarity = (s1, s2) => {\r\n        var longer = s1;\r\n        var shorter = s2;\r\n        if (s1.length < s2.length) {\r\n          longer = s2;\r\n          shorter = s1;\r\n        }\r\n        var longerLength = longer.length;\r\n        if (longerLength == 0) {\r\n          return 1.0;\r\n        }\r\n        return ((longerLength - this.editDistance(longer, shorter)) / parseFloat(longerLength)*100);\r\n    }\r\n\r\n    editDistance = (s1, s2) => {\r\n        //s1 = s1.toLowerCase();\r\n        //s2 = s2.toLowerCase();\r\n\r\n        var costs = new Array();\r\n        for (var i = 0; i <= s1.length; i++) {\r\n          var lastValue = i;\r\n          for (var j = 0; j <= s2.length; j++) {\r\n            if (i == 0)\r\n              costs[j] = j;\r\n            else {\r\n              if (j > 0) {\r\n                var newValue = costs[j - 1];\r\n                if (s1.charAt(i - 1) != s2.charAt(j - 1))\r\n                  newValue = Math.min(Math.min(newValue, lastValue),\r\n                    costs[j]) + 1;\r\n                costs[j - 1] = lastValue;\r\n                lastValue = newValue;\r\n              }\r\n            }\r\n          }\r\n          if (i > 0)\r\n            costs[s2.length] = lastValue;\r\n        }\r\n        return costs[s2.length];\r\n      }\r\n\r\n    textChange = (event) => {\r\n        \r\n        this.handleTextChange(event.target.value)\r\n\r\n        const eventValue = event.target.value.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n        const stateValue = this.props.element.name.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n        console.log(\"name \",this.props.element.name)\r\n        var similarity = this.similarity(stateValue,eventValue)\r\n        \r\n        if (event.target.value.length === 0){\r\n            this.setInputShadow(undefined)\r\n        }\r\n\r\n        if(similarity >= 0 && similarity < 30  && event.target.value.length > 1){\r\n            this.setInputShadow(\"inputShadowRed\")\r\n        }\r\n\r\n        if(similarity >= 30 && similarity < 70 ){\r\n            this.setInputShadow(\"inputShadowOrange\")\r\n        }\r\n\r\n        if(similarity >= 70 && similarity < 100 ){\r\n            this.setInputShadow(\"inputShadowGreen\")\r\n        }\r\n\r\n        if(stateValue == eventValue){\r\n            console.log(\"equals\")\r\n            this.props.updateElementsToGuess(\r\n                this.props.elementsToGuess, \r\n                this.props.element.atomic, \r\n                \"guessed\", \r\n                true\r\n            )\r\n            this.setShake(undefined);\r\n            this.props.setCuriousFact(this.props.element.atomic);\r\n        }\r\n        \r\n    }\r\n\r\n    handleTextChange = (value) => {\r\n        this.setState({nameValue: value});\r\n    }\r\n\r\n    inputText = () => {\r\n        \r\n        return(\r\n            <input className={`${this.state.inputShadow}`} placeholder= {\"??\"} value={this.state.nameValue} onChange={this.textChange} />\r\n        )\r\n    }\r\n\r\n    card = (shake) => {\r\n        if (window.innerWidth > 900){\r\n            return(\r\n            <div className={`periodic-table-element information ${this.props.element.cssStyle} ${shake ? \"shakeElement\":\"\"}`} >     \r\n                {<div className={'atomic'}>{this.props.element.atomic}</div> }\r\n                <div className={'symbol'}>{this.props.element.symbol}</div>\r\n                {shake?\r\n                    <div className={'name'}>??</div>\r\n                :\r\n                    <div className={'name'}>{this.props.element.name}</div>\r\n                }             \r\n                <canvas onClick={this.toggleModalChemicalElementInformation} className=\"ink\"></canvas>\r\n            </div>\r\n            ) \r\n        }\r\n        else{\r\n            return(\r\n            <div className={`periodic-table-element information ${this.props.element.cssStyle} ${shake ? \"shakeElement\":\"\"}`} >\r\n                            \r\n                <div className={'symbol'}>{this.props.element.symbol}</div>            \r\n                <canvas onClick={this.toggleModalChemicalElementInformation} className=\"ink\"></canvas>\r\n            </div>\r\n            ) \r\n        }\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        \r\n        const { shake, modalChemicalElementInformation } = this.state;\r\n\r\n        if(this.props.closeChemicalElementModal && modalChemicalElementInformation){\r\n            this.toggleModalChemicalElementInformation()\r\n            this.props.setCloseChemicalElementModal(false);\r\n        }\r\n\r\n        if(!this.state.shake){\r\n            this.checkShake()\r\n        }\r\n\r\n        return(\r\n            <div className = {'chemicalElement'}> \r\n                {\r\n                    this.props.element !== undefined ?\r\n                        this.card(shake)\r\n                    :\r\n                        null\r\n                }\r\n\r\n                {\r\n                    this.state.modalChemicalElementInformation ?\r\n                       <div>\r\n                           <div className={'overlay'} onClick={this.toggleModalChemicalElementInformation}></div>\r\n                            <div className={'styleElementModal modal modal-page '}> \r\n                                <div className={'box'}>\r\n                                    <span class=\"closeModalButton\" onClick={this.toggleModalChemicalElementInformation}>&times;</span>\r\n                                    <div className={`box-header information ${this.props.element.cssStyle} `}>\r\n                                        <div className={'element-name'}>\r\n                                        {shake?\r\n                                            this.inputText()\r\n                                        :\r\n                                            this.props.element.name\r\n                                        } \r\n                                            \r\n                                        </div>\r\n\r\n                                        <div className={'element-group'}>\r\n                                            {this.props.chemicalElementGroupName}\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={'box-body'}>\r\n\r\n                                        {\r\n                                            this.props.element.atomic !== null && \r\n                                            this.modalInfo(this.props.text.atomicNumber, this.props.element.atomic) \r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.symbol &&\r\n                                            this.modalInfo(this.props.text.symbol, this.props.element.symbol)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.atomicMass &&\r\n                                            this.modalInfo(this.props.text.mass, this.props.element.atomicMass)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.electronicConfiguration &&\r\n                                            this.modalInfo(this.props.text.electronicConf, this.props.element.electronicConfiguration)\r\n                                        }\r\n\r\n                                        {\r\n                                            this.props.element.electronegativity &&\r\n                                            this.modalInfo(this.props.text.electronegativity, this.props.element.electronegativity)\r\n                                        }\r\n\r\n                                        {\r\n                                            this.props.element.atomicRadius &&\r\n                                            this.modalInfo(this.props.text.atomicRadius, this.props.element.atomicRadius)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.ionRadius &&\r\n                                            this.modalInfo(this.props.text.ionicRadius, `${this.props.element.ionRadius} pm`)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.vanDelWaalsRadius !== null &&\r\n                                            this.modalInfo(this.props.text.vanDerWaalsRadius, `${this.props.element.vanDelWaalsRadius} pm`)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.ionizationEnergy &&\r\n                                            this.modalInfo(this.props.text.ionicEnergic, `${this.props.element.ionizationEnergy} mol`)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.electronAffinity !== null &&\r\n                                            this.modalInfo(this.props.text.electronicAffinity, this.props.element.electronAffinity)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.oxidationStates &&\r\n                                            this.modalInfo(this.props.text.oxidationState, this.props.element.oxidationStates)\r\n                                        }\r\n                                        \r\n                                    </div>\r\n                                \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    :\r\n                        null\r\n                }\r\n                \r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nChemicalElement.propTypes = {\r\n\r\n    atomicNumber : PropTypes.number.isRequired\r\n        \r\n}\r\n\r\nexport default ChemicalElement;","import React, {Component} from 'react';\r\nimport { PropTypes } from \"prop-types\";\r\nimport ChemicalElement from './../Components/ChemicalElement'\r\nimport './../css/index.css'\r\n\r\n\r\nclass Square extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            chemicalElement : undefined,\r\n            modalChemicalElementInformation : false, \r\n            chemicalElementGroupName : undefined,\r\n            shake : undefined,\r\n            nameValue : undefined, \r\n            inputShadow : undefined,\r\n            chemicalElementsSpanish : undefined,\r\n            lenguage : undefined\r\n        }\r\n\r\n        this.chemicalElements = require('./../Data/chemicalElements');\r\n        this.chemicalElementsSpanish = require('./../Data/chemicalElementsSpanish');\r\n    }\r\n\r\n    emptySquare = () => (\r\n        <div className={'Empty'}>\r\n        </div>\r\n    )\r\n\r\n    tinySquare = () => (\r\n        <div className={'Tiny'}>\r\n        </div>\r\n    )\r\n\r\n    getElement = () => {\r\n        let element = Object.assign(\r\n            {},\r\n            this.chemicalElements.find(\r\n                item => item.atomic === this.props.positionOfSquareInFormat\r\n            )\r\n        )\r\n        \r\n        if (this.props.lenguage === \"Spanish\"){\r\n            const elementSpanish = this.chemicalElementsSpanish.find(item => item.atomic === this.props.positionOfSquareInFormat)\r\n            element.name = elementSpanish.name;\r\n            element.group = elementSpanish.group;\r\n        }\r\n\r\n        return element\r\n\r\n    }\r\n\r\n    prettyGroupName(groupName){\r\n        groupName =  groupName.charAt(0).toUpperCase() + groupName.slice(1)\r\n        var index\r\n        var indicator = true\r\n        while(indicator){\r\n            index = groupName.indexOf('_')\r\n            if (index === -1)\r\n                indicator = false;\r\n            else{\r\n                groupName  = groupName.substr(0,index)+' '+ groupName.substr(index+1, groupName.length-1)\r\n            }  \r\n        }\r\n        \r\n        return groupName\r\n    }\r\n\r\n    ChemicalElement = () => {\r\n        const element = this.getElement();\r\n        const chemicalElementGroupName = this.prettyGroupName(element.group);\r\n\r\n        // Agregar los datos curiosos a lista de elementos seleccionados\r\n        \r\n        return(\r\n            <ChemicalElement\r\n                element = {element}\r\n                chemicalElementGroupName = {chemicalElementGroupName}\r\n                elementsToGuess= {this.props.elementsToGuess} \r\n                updateSelectedElements = {this.props.updateSelectedElements}\r\n                updateElementsToGuess = {this.props.updateElementsToGuess}\r\n                text = {this.props.text}\r\n                setCuriousFact = {this.props.setCuriousFact}\r\n                closeChemicalElementModal = {this.props.closeChemicalElementModal}\r\n                setCloseChemicalElementModal = {this.props.setCloseChemicalElementModal}\r\n            />\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={'Square '} >\r\n                {\r\n                    this.props.positionOfSquareInFormat > 0 ?\r\n                        this.ChemicalElement()\r\n                    :\r\n                        null\r\n                }\r\n\r\n                {\r\n                    this.props.positionOfSquareInFormat === 0 ?\r\n                        this.emptySquare()\r\n                    :\r\n                        null\r\n                }\r\n\r\n                {\r\n                    this.props.positionOfSquareInFormat < 0 ?\r\n                        this.tinySquare()\r\n                    :\r\n                        null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    \r\n    \r\n}\r\n\r\nSquare.propTypes = {\r\n\r\n    positionOfSquareInFormat : PropTypes.number.isRequired\r\n        \r\n}\r\n\r\nexport default Square;","import React, {Component} from 'react';\r\nimport Square from './../Components/Square'\r\nimport './../css/index.css'\r\n\r\n\r\nclass Matrix extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            selectedElements: undefined, \r\n            generatedSelectedElements: false\r\n        }\r\n        this.matrixFormat = require('./../Data/format.json');\r\n    }\r\n\r\n    setGeneratedSelectedElements= () => {\r\n        this.setState({\r\n            generatedSelectedElements: true\r\n        });\r\n    }\r\n\r\n    generatedList = async() => {\r\n        this.props.createElementsToGuess()\r\n        if (!this.state.generatedSelectedElements){\r\n            this.setGeneratedSelectedElements();\r\n        }\r\n    }\r\n\r\n    frameOfMatrix = (position, contend) => {\r\n        return(\r\n            <div className = {`row matrixFrame ${position}`}>\r\n                {contend}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    numberOfColumns = () => {\r\n        const columnsQuantity = this.matrixFormat[0].length+2 // (vertex)\r\n        const listOfColumnsId = Array.apply(null, {length: columnsQuantity}).map(Number.call, Number)\r\n        return(\r\n            <div className='row'>\r\n            {\r\n                listOfColumnsId.map((column, position)=>{\r\n                    if (position === 0 || position === 19 ){\r\n                        return this.frameOfMatrix('vertex',null)\r\n                    }\r\n                    else{\r\n                        return this.frameOfMatrix('numberOfColumn',position)\r\n                    }\r\n                })\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    matrixRows = () => {\r\n\r\n        return this.matrixFormat.map((rowFormat, position)=>{\r\n\r\n            var pos = undefined\r\n            if (position <= 6)\r\n                pos = position+1\r\n            else  \r\n                pos = null\r\n            return(\r\n                <div className=\"row\">\r\n                    {this.frameOfMatrix('numberOfRow',pos)}\r\n                    {rowFormat.map((cellIndex)=>{\r\n                        return(\r\n                            <Square\r\n                                positionOfSquareInFormat = {cellIndex}\r\n                                elementsToGuess= {this.props.elementsToGuess}\r\n                                updateElementsToGuess = {this.props.updateElementsToGuess}\r\n                                lenguage = {this.props.lenguage}\r\n                                text = {this.props.text}\r\n                                setCuriousFact = {this.props.setCuriousFact}\r\n                                closeChemicalElementModal = {this.props.closeChemicalElementModal}\r\n                                setCloseChemicalElementModal = {this.props.setCloseChemicalElementModal}\r\n                            />\r\n                        )\r\n                    })}\r\n                    {this.frameOfMatrix('numberOfRow',pos)}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        \r\n        if(this.state.generatedSelectedElements === false){\r\n            this.generatedList()\r\n        }\r\n\r\n        if (this.props.elementsToGuess){\r\n            return(\r\n                <div className=\"periodic-table\">\r\n                    <div className=\"table\">\r\n                    {this.numberOfColumns()}\r\n                    {this.matrixRows()}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            // return loading view\r\n            return( null )\r\n        }\r\n        \r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default Matrix;","import React, {Component} from 'react';\r\nimport './../css/appHeader.css';\r\nimport './../css/index.css';\r\n\r\nclass AppHeader extends Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            title : undefined,\r\n            language : undefined\r\n        }\r\n        this.setTitle = this.setTitle.bind(this);\r\n        this.toggleLanguage = this.toggleLanguage.bind(this);\r\n    }\r\n\r\n    setTitle = () => {\r\n        const title = this.props.text.elements.find(\r\n            item => item.id === \"title\"\r\n        )\r\n        \r\n        this.setState({\r\n            title: title.text\r\n        });\r\n    }\r\n\r\n    toggleLanguage = (language) => {\r\n        this.setState({\r\n            language : language\r\n        });\r\n    }\r\n\r\n    setLanguage = () => {\r\n        \r\n        this.toggleLanguage(this.props.language)\r\n        this.setTitle();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setLanguage()\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n        if (prevProps.language == this.props.language & this.props.language != this.state.language){\r\n            this.setLanguage()\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={'app-header'}>\r\n                <h1 className={'title'}>{this.state.title}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppHeader;","import React, {Component} from 'react';\r\nimport './../css/footer.css';\r\nimport './../css/index.css';\r\n\r\nimport './../css/index.css'\r\nimport './../css/colorsOfTheElements.css'\r\nimport './../css/chemicalElement.css'\r\n\r\n\r\nclass Footer extends Component{\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { \r\n            title : undefined,\r\n            language : undefined\r\n         };\r\n\r\n        this.setTitle = this.setTitle.bind(this);\r\n        this.toggleLanguage = this.toggleLanguage.bind(this);   \r\n    }\r\n\r\n    setTitle = () => {\r\n        const title = this.props.text.elements.find(\r\n            item => item.id === \"title\"\r\n        )\r\n        \r\n        this.setState({\r\n            title: title.text\r\n        });\r\n    }\r\n\r\n    toggleLanguage = (language) => {\r\n        this.setState({\r\n            language : language\r\n        });\r\n    }\r\n\r\n    setLanguage = () => {\r\n        this.toggleLanguage(this.props.language)\r\n        this.setTitle();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setLanguage()\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n        if (prevProps.language == this.props.language & this.props.language != this.state.language){\r\n            this.setLanguage()\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div>\r\n                <div className={'footer'}>\r\n                    <div id=\"settings\" onClick={this.props.setShowSettings}>\r\n                        <h1 className={'title'}>{this.state.title}</h1>\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport './../css/index.css'\r\nimport './../css/colorsOfTheElements.css'\r\nimport './../css/chemicalElement.css'\r\nimport './../css/footer.css'\r\n\r\n\r\nclass Modal extends Component{\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { \r\n            showInstructions: false, \r\n            showHowtoPlay : false, \r\n            showAboutTheAuthor : false, \r\n            showChooseLenguage : false,\r\n            modalTittle : \"Settings\",\r\n            title : undefined,\r\n            language : undefined,\r\n            howToPlay: undefined,\r\n            chooseLanguage : undefined,\r\n            aboutTheAuthor: undefined,\r\n            exit: undefined,\r\n            back: undefined, \r\n\r\n            howToPlay1: undefined,\r\n            howToPlay2: undefined,\r\n            howToPlay3: undefined, \r\n\r\n            language1: undefined, \r\n            language2: undefined\r\n        };\r\n\r\n        this.toggleShowInstructions = this.toggleShowInstructions.bind(this);\r\n        this.toggleShowHowToPlay = this.toggleShowHowToPlay.bind(this);\r\n        this.toggleShowAboutTheAuthor = this.toggleShowAboutTheAuthor.bind(this);\r\n        this.toggleShowChooseLenguage = this.toggleShowChooseLenguage.bind(this);\r\n        this.toggleModalTittle = this.toggleModalTittle.bind(this);\r\n        this.setTitle = this.setTitle.bind(this);\r\n        this.toggleLanguage = this.toggleLanguage.bind(this);\r\n    }\r\n\r\n    returnElement = (elementTitle) => {\r\n        \r\n        const element = this.props.text.elements.find(\r\n            item => item.id === elementTitle\r\n        )\r\n        return element\r\n    }\r\n\r\n    setTitle = (changeLanguage) => {\r\n        const title = this.returnElement(\"modalTitle\");\r\n        const howToPlay = this.returnElement(\"howToPlayTitle\");\r\n        const chooseLanguage = this.returnElement(\"languageTitle\");\r\n        const aboutTheAuthor = this.returnElement(\"aboutTheAuthorTitle\");\r\n        const exit = this.returnElement(\"exitTitle\");\r\n        const back = this.returnElement(\"back\");\r\n\r\n        const instructionHowToPlay1 = this.returnElement(\"instructionHowToPlay1\");\r\n        const instructionHowToPlay2 = this.returnElement(\"instructionHowToPlay2\");\r\n        const instructionHowToPlay3 = this.returnElement(\"instructionHowToPlay3\");\r\n\r\n        const language1 = this.returnElement(\"language1\");\r\n        const language2 = this.returnElement(\"language2\");\r\n\r\n        const author1 = this.returnElement(\"author1\");\r\n        const author2 = this.returnElement(\"author2\");\r\n\r\n\r\n\r\n        const modalTitle = changeLanguage ? chooseLanguage.text : title.text\r\n\r\n        this.setState({\r\n            title: title.text,\r\n            modalTittle : modalTitle,\r\n            howToPlay: howToPlay.text,\r\n            chooseLanguage: chooseLanguage.text,\r\n            aboutTheAuthor: aboutTheAuthor.text,\r\n            exit: exit.text,\r\n            back: back.text,\r\n\r\n            instructionHowToPlay1 : instructionHowToPlay1.text,\r\n            instructionHowToPlay2 : instructionHowToPlay2.text,\r\n            instructionHowToPlay3 : instructionHowToPlay3.text, \r\n            \r\n            language1: language1.text,\r\n            language2: language2.text, \r\n\r\n            author1: author1.text,\r\n            author2: author2.text\r\n        });\r\n    }\r\n\r\n    toggleLanguage = (language) => {\r\n        this.setState({\r\n            language : language\r\n        });\r\n    }\r\n\r\n    setLanguage = (changeLanguage) => {\r\n        \r\n        this.toggleLanguage(this.props.language)\r\n        this.setTitle(changeLanguage);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setLanguage()\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n        \r\n        if (prevProps.language == this.props.language & this.props.language != this.state.language){\r\n            this.setLanguage(true)\r\n        }\r\n    }\r\n\r\n    toggleModalTittle(title) {\r\n        const modalTittle = title ? title : this.state.title;\r\n        this.setState({\r\n            modalTittle : modalTittle\r\n        });\r\n    }\r\n\r\n    toggleShowInstructions() {\r\n        this.setState({\r\n            showInstructions : !this.state.showInstructions\r\n        });\r\n    }\r\n\r\n    toggleShowChooseLenguage () {\r\n        this.setState({\r\n            showChooseLenguage : !this.state.showChooseLenguage\r\n        });\r\n        const modalTittle = !this.state.showChooseLenguage ? this.state.chooseLanguage : null;\r\n        this.toggleModalTittle(modalTittle);\r\n    }\r\n\r\n    toggleShowAboutTheAuthor () {\r\n        this.setState({\r\n            showAboutTheAuthor : !this.state.showAboutTheAuthor\r\n        });\r\n        const modalTittle = !this.state.showAboutTheAuthor ? \"Mauro López\" : null;\r\n        this.toggleModalTittle(modalTittle);\r\n    }\r\n\r\n    toggleShowHowToPlay() {\r\n        this.setState({\r\n            showHowtoPlay : !this.state.showHowtoPlay\r\n        });\r\n        const modalTittle = !this.state.showHowtoPlay ? this.state.howToPlay : null;\r\n        this.toggleModalTittle(modalTittle);\r\n    }\r\n\r\n    handleLenguageChange = (changeEvent) => {\r\n        this.props.toggleLenguage(changeEvent.target.value);\r\n    }\r\n\r\n    settings = () => {\r\n        return (\r\n            <div className={'box-body'}>\r\n                {\r\n                    <div className={'box-body-information-simple information amphigens'}\r\n                    onClick={this.toggleShowHowToPlay}>\r\n                    1: {this.state.howToPlay}\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-simple information noble_gases'}\r\n                    onClick={this.toggleShowChooseLenguage}>\r\n                    2: {this.state.chooseLanguage}\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-simple information transition_metals'}\r\n                    onClick={this.toggleShowAboutTheAuthor}>\r\n                    3: {this.state.aboutTheAuthor}\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-simple information metalloids'}\r\n                    onClick={this.props.setShowSettings}>\r\n                    {this.state.exit}\r\n                    </div>  \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    howToPlay = () => {\r\n        return (\r\n            <div className={'box-body'}>\r\n                {\r\n                    <div className={'box-body-information-simple information amphigens'}>\r\n                    1: {this.state.instructionHowToPlay1}\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-simple information noble_gases'}>\r\n                    2: {this.state.instructionHowToPlay2}\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-simple information transition_metals'}>\r\n                    3: {this.state.instructionHowToPlay3}\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-simple information transition_metals'}\r\n                    onClick={this.toggleShowHowToPlay}>\r\n                    {this.state.back}\r\n                    </div>  \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    lenguage = () => {\r\n        return (\r\n            <div className={'box-body'}>\r\n                {\r\n                    <div className={'box-body-information-simple information amphigens'}>\r\n                    <div></div>\r\n                    \r\n                    <input type=\"radio\" id=\"lenguage1\" name=\"lenguage\" value=\"Spanish\" \r\n                    checked = {this.props.language === \"Spanish\"}\r\n                    onChange= {this.handleLenguageChange}></input>\r\n                    <label for=\"lenguage1\">{this.state.language1}</label>\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-simple information noble_gases'}>\r\n                    \r\n                    <input type=\"radio\" id=\"lenguage2\" name=\"lenguage\" value=\"English\"\r\n                    checked = {this.props.language === \"English\"}\r\n                    onChange= {this.handleLenguageChange}>\r\n                    </input>\r\n                    <label for=\"lenguage2\">{this.state.language2}</label>\r\n                    \r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-simple information transition_metals'}\r\n                    onClick={this.toggleShowChooseLenguage}>\r\n                    {this.state.back}\r\n                    </div>  \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    aboutTheAuthor = () => {\r\n        return(\r\n            <div className={'box-body'}>     \r\n                {\r\n                    <div className={'box-body-information-simple information basic_metals'}>\r\n                    {this.state.author1}\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-simple information actinoids'}>\r\n                    {this.state.author2}\r\n                    </div>  \r\n                }\r\n\r\n                {\r\n                    <div className={'box-body-information-simple information amphigens'}>\r\n                    Mail: lopezjimenezmauro05@gmail.com\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-simple information noble_gases'}>\r\n                    Github: MLopezJ\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-simple information transition_metals'}>\r\n                    Twitter: MauroLopezJ\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-simple information metalloids'}\r\n                    onClick={this.toggleShowAboutTheAuthor}>\r\n                    {this.state.back}\r\n                    </div>  \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    modal = () => {\r\n\r\n        return(\r\n            <div>\r\n                <div className={'overlay'} onClick={this.props.setShowSettings}></div>\r\n                <div className={'styleElementModal modal modal-page '}>\r\n                 \r\n                    <div className={'box'}>\r\n                        <span className=\"closeModalButton\" onClick={this.props.setShowSettings}>&times;</span>\r\n                        \r\n                        <div className={`box-header information alkali_metals `}>\r\n                            <div className={'element-name'}>\r\n                            {`${this.state.modalTittle}`}    \r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className={'box-body'}>\r\n                        {this.state.showHowtoPlay ? this.howToPlay() : null }\r\n                        {this.state.showAboutTheAuthor ? this.aboutTheAuthor() : null }\r\n                        {this.state.showChooseLenguage ? this.lenguage() : null }\r\n                        {!this.state.showHowtoPlay && !this.state.showAboutTheAuthor\r\n                        && !this.state.showChooseLenguage ?\r\n                            this.settings() : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        \r\n        if (this.props.showSettings){\r\n            return(\r\n                this.modal()\r\n            )\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, {Component} from 'react';\r\nimport './../css/index.css'\r\nimport './../css/colorsOfTheElements.css'\r\nimport './../css/chemicalElement.css'\r\nimport './../css/footer.css'\r\n\r\nclass EndOfGame extends Component{\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            title : undefined,\r\n            time: undefined,\r\n            minutes : undefined,\r\n            seconds : undefined,\r\n            objetiveCompleted : undefined,\r\n            language : undefined, \r\n            playAgain : undefined\r\n        }\r\n\r\n        this.setTitle = this.setTitle.bind(this);\r\n        this.setMinutes = this.setMinutes.bind(this);\r\n        this.setTime = this.setTime.bind(this);\r\n        this.setSeconds = this.setSeconds.bind(this);\r\n        this.setObjetiveCompleted = this.setObjetiveCompleted.bind(this);\r\n        this.setPlayAgain = this.setPlayAgain.bind(this);\r\n        this.toggleLanguage = this.toggleLanguage.bind(this);\r\n    }\r\n\r\n    setTitle = () => {\r\n        const title = this.props.text.elements.find(\r\n            item => item.id === \"title\"\r\n        )\r\n        \r\n        this.setState({\r\n            title: title.text\r\n        });\r\n    }\r\n\r\n    setTime = () => {\r\n        const time = this.props.text.elements.find(\r\n            item => item.id === \"time\"\r\n        )\r\n        \r\n        this.setState({\r\n            time: time.text\r\n        });\r\n    }\r\n\r\n    setMinutes = () => {\r\n        const minutes = this.props.text.elements.find(\r\n            item => item.id === \"minutes\"\r\n        )\r\n        \r\n        this.setState({\r\n            minutes: minutes.text\r\n        });\r\n    }\r\n\r\n    setSeconds = () => {\r\n        const seconds = this.props.text.elements.find(\r\n            item => item.id === \"seconds\"\r\n        )\r\n        \r\n        this.setState({\r\n            seconds: seconds.text\r\n        });\r\n    }\r\n\r\n    setObjetiveCompleted = () => {\r\n        const objetiveCompleted = this.props.text.elements.find(\r\n            item => item.id === \"objetiveCompleted\"\r\n        )\r\n        \r\n        this.setState({\r\n            objetiveCompleted: objetiveCompleted.text\r\n        });\r\n    }\r\n\r\n    setPlayAgain = () => {\r\n        const playAgain = this.props.text.elements.find(\r\n            item => item.id === \"playAgain\"\r\n        )\r\n        \r\n        this.setState({\r\n            playAgain: playAgain.text\r\n        });\r\n    }\r\n\r\n    toggleLanguage = (language) => {\r\n        this.setState({\r\n            language : language\r\n        });\r\n    }\r\n\r\n    setLanguage = () => {\r\n        \r\n        this.toggleLanguage(this.props.language)\r\n        this.setTitle();\r\n        this.setTime();\r\n        this.setMinutes();\r\n        this.setSeconds();\r\n        this.setObjetiveCompleted();\r\n        this.setPlayAgain();\r\n    }\r\n\r\n    showTime = () => {\r\n        const text = this.props.timeElapsed[0] > 0 ? \r\n            this.props.timeElapsed[0] + \" \" + this.state.minutes + \" : \" + this.props.timeElapsed[1] + \" \" + this.state.seconds\r\n            :\r\n            this.props.timeElapsed[1] + \" \" + this.state.seconds\r\n\r\n        return(\r\n            <div className={'box-body-information-simple information noble_gases'}>\r\n            {this.state.time} = {text}\r\n            </div> \r\n        )\r\n    }\r\n\r\n    reloadPage = () => {\r\n        window.location.reload()\r\n    }\r\n\r\n    playAgain = () => {\r\n        return(\r\n            <div className={'box-body-information-simple information transition_metals'}\r\n            onClick = {this.reloadPage}>\r\n                {this.state.playAgain}\r\n            </div> \r\n        ) \r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setLanguage()\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n        if (prevProps.language == this.props.language & this.props.language != this.state.language){\r\n            this.setLanguage()\r\n        }\r\n    }\r\n\r\n    modal = () => {\r\n\r\n        return(\r\n            <div>\r\n                <div className={'overlay'} onClick={null}></div>\r\n                <div className={'styleElementModal modal modal-page '}> \r\n                    <div className={'box'}>\r\n                    <span className=\"closeModalButton\" onClick={this.props.setStateEndOfGame}>&times;</span>\r\n                    {\r\n                        <div className={'box-body-information'}>\r\n                        \r\n                            <div className={'box-header information alkali_metals'}>\r\n                \r\n                                <div className={'element-name'}>\r\n                                    {this.state.title}\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>  \r\n                    }\r\n\r\n                    <div className={'box-body'}>\r\n\r\n                        <div className={'box-body'}>\r\n                            {\r\n                                <div className={'box-body-information-simple information amphigens'}>\r\n                                {this.state.objetiveCompleted}\r\n                                </div>  \r\n                            }\r\n                            {\r\n                                this.showTime()\r\n                            }\r\n\r\n                            {\r\n                                this.playAgain()\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        \r\n        if (this.props.showModal){\r\n            return(\r\n                this.modal()\r\n            )\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\nexport default EndOfGame;","import React, { Component } from 'react';\r\nimport Matrix from './Components/Matrix';\r\nimport AppHeader from './Components/AppHeader';\r\nimport Footer from './Components/Footer';\r\nimport Instructions from './Components/Instructions';\r\nimport EndOfGame from './Components/EndOfGame';\r\n//import './App.css';\r\nimport './css/index.css'\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n        showSettings: true,\r\n        language: \"Spanish\",\r\n        text : require('./Data/textSpanish.json'), \r\n        elementsToGuess : undefined, \r\n        endOfGame : false, \r\n        closeChemicalElementModal : undefined\r\n    }\r\n    this.setShowSettings = this.setShowSettings.bind(this);\r\n    this.toggleLenguage = this.toggleLenguage.bind(this);\r\n    this.setElementsToGuess = this.setElementsToGuess.bind(this);\r\n    this.setEndOfGame = this.setEndOfGame.bind(this);\r\n    this.updateElementsToGuess = this.updateElementsToGuess.bind(this);\r\n    this.textEnglish = require('./Data/text.json');\r\n    this.textSpanish = require('./Data/textSpanish.json');\r\n    this.startTime = undefined;\r\n    this.timeElapsed = undefined;\r\n}\r\n\r\nsetCloseChemicalElementModal = (value) => {\r\n  this.setState({\r\n    closeChemicalElementModal: value\r\n  });\r\n}\r\n\r\nsetEndOfGame = () => {\r\n  this.setState({\r\n    endOfGame: !this.state.endOfGame\r\n  });\r\n}\r\n\r\nsetElementsToGuess = (arr) => {\r\n  this.setState({\r\n    elementsToGuess: arr\r\n  });\r\n}\r\n\r\ncreateElementsToGuess = () => {\r\n  var arr = [];\r\n  while(arr.length < 3){ \r\n    var id = Math.floor(Math.random() * 118) + 1;\r\n    var element = {\r\n        id: id,\r\n        guessed : false,\r\n        curiousFact : null\r\n    }\r\n    if((arr.findIndex(element => element.id === id)) === -1 ) arr.push(element);\r\n  }\r\n  this.setElementsToGuess(arr);\r\n}\r\n\r\nupdateElementsToGuess = (arr, id, attribute, value) => {\r\n  var index = arr.findIndex(element => element.id === id) \r\n  if (index !== -1){\r\n    arr[index][attribute] = value\r\n  }\r\n  this.setElementsToGuess(arr);\r\n}\r\n\r\nsetCuriousFact = (id) => {\r\n  const curiousFact = \"something\"; // add custom curious fact \r\n  this.updateElementsToGuess(this.state.elementsToGuess, id, \"curiousFact\", curiousFact);\r\n  this.checkElementsGuessState();\r\n}\r\n\r\ncheckElementsGuessState = () => {\r\n  const allElementsGuessed = this.state.elementsToGuess.every( element => {\r\n    return element.guessed === true ;\r\n  })\r\n\r\n  if (allElementsGuessed){\r\n    var timeElapsedMillis = Math.abs(new Date() - this.startTime);\r\n    var timeElapsed = this.millisToMinutesAndSeconds(timeElapsedMillis);\r\n    this.setCloseChemicalElementModal(true);\r\n    this.timeElapsed = timeElapsed;\r\n    this.setEndOfGame();\r\n  }\r\n}\r\n\r\ntoggleText = () => {\r\n  const text = this.state.language === \"Spanish\" ? this.textSpanish : this.textEnglish;\r\n  \r\n  this.setState({\r\n    text: text\r\n  });\r\n}\r\n\r\nmillisToMinutesAndSeconds = (millis) => {\r\n  const minutes = Math.floor(millis / 60000);\r\n  const seconds = ((millis % 60000) / 1000).toFixed(0);\r\n  const time = [minutes, seconds];\r\n  return time;\r\n}\r\n\r\nsetShowSettings = () => {\r\n  this.setState({\r\n    showSettings: !this.state.showSettings\r\n  });\r\n  if (this.startTime === undefined){\r\n    this.startTime = new Date();\r\n  }\r\n}\r\n\r\ntoggleLenguage = (language) => {\r\n  this.setState({\r\n    language: language\r\n  });\r\n}\r\n\r\nchangeLanguage = (language) => {\r\n  this.toggleLenguage(language);\r\n  this.toggleText();\r\n}\r\n\r\ncomponentDidMount = () => {\r\n  this.toggleText();\r\n}\r\n\r\ncomponentDidUpdate = (prevProps, prevState, snapshot) => {\r\n  \r\n  if(prevState.language !=  this.state.language){\r\n    this.toggleText();\r\n  }\r\n}\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className={'app'}>\r\n        <div className={'app-content'}>\r\n          <AppHeader\r\n            text = {this.state.text.appHeader}\r\n            language = {this.state.language}\r\n          />\r\n          <Matrix\r\n            lenguage = {this.state.language}\r\n            text = {this.state.text.elementModal}\r\n            elementsToGuess = {this.state.elementsToGuess}\r\n            createElementsToGuess = {this.createElementsToGuess}\r\n            updateElementsToGuess = {this.updateElementsToGuess}\r\n            setCuriousFact = {this.setCuriousFact}\r\n            closeChemicalElementModal = {this.state.closeChemicalElementModal}\r\n            setCloseChemicalElementModal = {this.setCloseChemicalElementModal}\r\n          />\r\n          <Footer\r\n            setShowSettings = {this.setShowSettings}\r\n            text = {this.state.text.footer}\r\n            language = {this.state.language}\r\n          />\r\n          <Instructions\r\n            showSettings = {this.state.showSettings}\r\n            setShowSettings = {this.setShowSettings}\r\n            text = {this.state.text.instructions} \r\n            language = {this.state.language}\r\n            toggleLenguage = {this.changeLanguage}\r\n          />\r\n          <EndOfGame\r\n            text = {this.state.text.endOfGame}\r\n            language = {this.state.language}\r\n            showModal = {this.state.endOfGame}\r\n            setStateEndOfGame = {this.setEndOfGame}\r\n            timeElapsed = {this.timeElapsed}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}