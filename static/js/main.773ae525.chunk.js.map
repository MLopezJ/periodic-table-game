{"version":3,"sources":["Components/ChemicalElement.js","Components/Square.js","Components/Matrix.js","Components/AppHeader.js","Components/Footer.js","Components/Instructions.js","App.js","serviceWorker.js","index.js"],"names":["ChemicalElement","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setInputShadow","state","setState","inputShadow","setShake","shake","componentDidMount","element","chemicalElements","find","item","atomic","props","atomicNumber","setChemicalElement","info","title","description","react_default","a","createElement","className","checkShake","selectedElements","indexOf","chemicalElement","similarity","s1","s2","longer","shorter","length","longerLength","editDistance","parseFloat","costs","Array","i","lastValue","j","newValue","charAt","Math","min","textChange","event","handleTextChange","target","value","console","log","name","toLowerCase","undefined","updateSelectedElements","nameValue","inputText","concat","placeholder","onChange","modalChemicalElementInformation","chemicalElementGroupName","bind","assertThisInitialized","toggleModalChemicalElementInformation","prettyGroupName","require","groupName","index","toUpperCase","slice","indicator","substr","group","symbol","onClick","atomicMass","electronicConfiguration","electronegativity","atomicRadius","ionRadius","vanDelWaalsRadius","ionizationEnergy","electronAffinity","oxidationStates","Component","Square","emptySquare","tinySquare","Components_ChemicalElement","positionOfSquareInFormat","Matrix","id","newList","filter","setSelectedElements","setGeneratedSelectedElements","generatedSelectedElements","generatedList","arr","r","floor","random","push","frameOfMatrix","position","contend","numberOfColumns","columnsQuantity","matrixFormat","listOfColumnsId","apply","map","Number","column","matrixRows","rowFormat","pos","cellIndex","Components_Square","AppHeader","Footer","dedicationMessage","showDedicationMessage","toggleShowDedicationMessage","Modal","instructions","toggleShowInstructions","showInstructions","App","Components_AppHeader","Components_Matrix","Components_Footer","Instructions","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.773ae525.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { PropTypes } from \"prop-types\";\r\nimport './../css/index.css'\r\nimport './../css/colorsOfTheElements.css'\r\nimport './../css/chemicalElement.css'\r\n\r\nclass ChemicalElement extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            chemicalElement : undefined,\r\n            modalChemicalElementInformation : false, \r\n            chemicalElementGroupName : undefined,\r\n            shake : undefined,\r\n            nameValue : undefined, \r\n            inputShadow : undefined\r\n        }\r\n\r\n        this.setChemicalElement = this.setChemicalElement.bind(this);\r\n        this.toggleModalChemicalElementInformation = this.toggleModalChemicalElementInformation.bind(this);\r\n        this.prettyGroupName = this.prettyGroupName.bind(this);\r\n        this.chemicalElements = require('./../Data/chemicalElements');\r\n        this.shake = this.setShake.bind(this);\r\n        this.nameValue = this.handleTextChange.bind(this);\r\n        this.inputShadow = this.setInputShadow.bind(this);\r\n    }\r\n\r\n    setInputShadow = (state) => {\r\n        this.setState({\r\n            inputShadow: state\r\n        });\r\n    }\r\n\r\n    setShake = (state) => {\r\n        this.setState({\r\n            shake: state\r\n        });\r\n    }\r\n\r\n    prettyGroupName(groupName){\r\n        groupName =  groupName.charAt(0).toUpperCase() + groupName.slice(1)\r\n        var index\r\n        var indicator = true\r\n        while(indicator){\r\n            index = groupName.indexOf('_')\r\n            if (index === -1)\r\n                indicator = false;\r\n            else{\r\n                groupName  = groupName.substr(0,index)+' '+ groupName.substr(index+1, groupName.length-1)\r\n            }  \r\n        }\r\n        //console.log(groupName)\r\n        this.setState({\r\n            chemicalElementGroupName: groupName\r\n        });\r\n    }\r\n\r\n    toggleModalChemicalElementInformation(){\r\n        this.prettyGroupName(this.state.chemicalElement.group)\r\n        this.setState({\r\n            modalChemicalElementInformation: !this.state.modalChemicalElementInformation\r\n        });\r\n    }\r\n\r\n    setChemicalElement(element){\r\n        this.setState({\r\n            chemicalElement: element\r\n        });\r\n    }\r\n    \r\n    componentDidMount = () =>{\r\n        const element = this.chemicalElements.find(item => item.atomic === this.props.atomicNumber)\r\n        this.setChemicalElement(element)\r\n    }\r\n\r\n    info = (title, description) => {\r\n        return(\r\n            <div className={'box-body-information'}>\r\n                <div className={'box-body-information-key'}>\r\n                    {title}\r\n                </div>\r\n                <div className={'box-body-information-value'}>\r\n                    {description} \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    checkShake = () => {\r\n        let shake = null\r\n        if (this.props.selectedElements){\r\n            \r\n            shake = this.props.selectedElements.indexOf(this.state.chemicalElement.atomic) === -1 ? false : \"shake\" ;\r\n            \r\n            if (shake){\r\n                this.setShake(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    similarity = (s1, s2) => {\r\n        var longer = s1;\r\n        var shorter = s2;\r\n        if (s1.length < s2.length) {\r\n          longer = s2;\r\n          shorter = s1;\r\n        }\r\n        var longerLength = longer.length;\r\n        if (longerLength == 0) {\r\n          return 1.0;\r\n        }\r\n        return ((longerLength - this.editDistance(longer, shorter)) / parseFloat(longerLength)*100);\r\n    }\r\n\r\n    editDistance = (s1, s2) => {\r\n        //s1 = s1.toLowerCase();\r\n        //s2 = s2.toLowerCase();\r\n\r\n        var costs = new Array();\r\n        for (var i = 0; i <= s1.length; i++) {\r\n          var lastValue = i;\r\n          for (var j = 0; j <= s2.length; j++) {\r\n            if (i == 0)\r\n              costs[j] = j;\r\n            else {\r\n              if (j > 0) {\r\n                var newValue = costs[j - 1];\r\n                if (s1.charAt(i - 1) != s2.charAt(j - 1))\r\n                  newValue = Math.min(Math.min(newValue, lastValue),\r\n                    costs[j]) + 1;\r\n                costs[j - 1] = lastValue;\r\n                lastValue = newValue;\r\n              }\r\n            }\r\n          }\r\n          if (i > 0)\r\n            costs[s2.length] = lastValue;\r\n        }\r\n        return costs[s2.length];\r\n      }\r\n\r\n    textChange = (event) => {\r\n        \r\n        this.handleTextChange(event.target.value)\r\n\r\n        console.log(\"name \",this.state.chemicalElement.name)\r\n        var similarity = this.similarity(this.state.chemicalElement.name.toLowerCase(),event.target.value.toLowerCase())\r\n        \r\n        if (event.target.value.length === 0){\r\n            this.setInputShadow(undefined)\r\n        }\r\n\r\n        if(similarity >= 0 && similarity < 30  && event.target.value.length > 1){\r\n            this.setInputShadow(\"inputShadowRed\")\r\n        }\r\n\r\n        if(similarity >= 30 && similarity < 70 ){\r\n            this.setInputShadow(\"inputShadowOrange\")\r\n        }\r\n\r\n        if(similarity >= 70 && similarity < 100 ){\r\n            this.setInputShadow(\"inputShadowGreen\")\r\n        }\r\n\r\n        if(this.state.chemicalElement.name.toLowerCase() == event.target.value.toLowerCase()){\r\n            console.log(\"equals\")\r\n            this.props.updateSelectedElements(this.state.chemicalElement.atomic)\r\n            this.setShake(undefined);\r\n        }\r\n        \r\n    }\r\n\r\n    handleTextChange = (value) => {\r\n        this.setState({nameValue: value});\r\n    }\r\n\r\n    inputText = () => {\r\n        \r\n        return(\r\n            <input className={`${this.state.inputShadow}`} placeholder= {\"??\"} value={this.state.nameValue} onChange={this.textChange} />\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        const { shake } = this.state;\r\n\r\n        if(!this.state.shake){\r\n            this.checkShake()\r\n        }\r\n\r\n        return(\r\n            <div className = {'chemicalElement'}> \r\n                {\r\n                    this.state.chemicalElement !== undefined ?\r\n                        <div className={`periodic-table-element information ${this.state.chemicalElement.group} ${shake ? \"shakeElement\":\"\"}`} >\r\n                            {/*console.log(this.state.chemicalElement)*/}\r\n                            <div className={'atomic'}>{this.state.chemicalElement.atomic}</div>\r\n                            <div className={'symbol'}>{this.state.chemicalElement.symbol}</div>\r\n                            {shake?\r\n                                <div className={'name'}>??</div>\r\n                            :\r\n                                <div className={'name'}>{this.state.chemicalElement.name}</div>\r\n                            }             \r\n                            <canvas onClick={this.toggleModalChemicalElementInformation} className=\"ink\"></canvas>\r\n                        </div>\r\n                    :\r\n                        null\r\n                }\r\n\r\n                {\r\n                    this.state.modalChemicalElementInformation ?\r\n                       <div>\r\n                           <div className={'overlay'} onClick={this.toggleModalChemicalElementInformation}></div>\r\n                            <div className={'styleElementModal modal modal-page '}> \r\n                                <div className={'box'}>\r\n\r\n                                    <div className={`box-header information ${this.state.chemicalElement.group} `}>\r\n                                        <div className={'element-name'}>\r\n                                        {shake?\r\n                                            this.inputText()\r\n                                        :\r\n                                            this.state.chemicalElement.name\r\n                                        } \r\n                                            \r\n                                        </div>\r\n\r\n                                        <div className={'element-group'}>\r\n                                            {this.state.chemicalElementGroupName}\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={'box-body'}>\r\n\r\n                                        {\r\n                                            this.state.chemicalElement.atomic !== null && \r\n                                            this.info(\"Atomic Number\", this.state.chemicalElement.atomic) \r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.symbol &&\r\n                                            this.info(\"Symbol\", this.state.chemicalElement.symbol)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.atomicMass &&\r\n                                            this.info(\"Mass\", this.state.chemicalElement.atomicMass)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.electronicConfiguration &&\r\n                                            this.info(\"Electronic Conf.\", this.state.chemicalElement.electronicConfiguration)\r\n                                        }\r\n\r\n                                        {\r\n                                            this.state.chemicalElement.electronegativity &&\r\n                                            this.info(\"Electronegativity\", this.state.chemicalElement.electronegativity)\r\n                                        }\r\n\r\n                                        {\r\n                                            this.state.chemicalElement.atomicRadius &&\r\n                                            this.info(\"Atomic Radius\", this.state.chemicalElement.atomicRadius)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.ionRadius &&\r\n                                            this.info(\"Ionic Radius\", `${this.state.chemicalElement.ionRadius} pm`)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.vanDelWaalsRadius !== null &&\r\n                                            this.info(\"Van der Waals Radius\", `${this.state.chemicalElement.vanDelWaalsRadius} pm`)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.ionizationEnergy &&\r\n                                            this.info(\"Ionic Energic\", `${this.state.chemicalElement.ionizationEnergy} mol`)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.electronAffinity !== null &&\r\n                                            this.info(\"Electronic affinity\", this.state.chemicalElement.electronAffinity)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.oxidationStates &&\r\n                                            this.info(\"Oxidation state\", this.state.chemicalElement.oxidationStates)\r\n                                        }\r\n                                        \r\n                                    </div>\r\n                                \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    :\r\n                        null\r\n                }\r\n                \r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nChemicalElement.propTypes = {\r\n\r\n    atomicNumber : PropTypes.number.isRequired\r\n        \r\n}\r\n\r\nexport default ChemicalElement;","import React, {Component} from 'react';\r\nimport { PropTypes } from \"prop-types\";\r\nimport ChemicalElement from './../Components/ChemicalElement'\r\nimport './../css/index.css'\r\n\r\n\r\nclass Square extends Component {\r\n\r\n    emptySquare = () => (\r\n        <div className={'Empty'}>\r\n        </div>\r\n    )\r\n\r\n    tinySquare = () => (\r\n        <div className={'Tiny'}>\r\n        </div>\r\n    )\r\n\r\n    ChemicalElement = () => {\r\n        return(\r\n            <ChemicalElement\r\n                atomicNumber = {this.props.positionOfSquareInFormat}\r\n                selectedElements = {this.props.selectedElements}\r\n                updateSelectedElements = {this.props.updateSelectedElements}\r\n            />\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={'Square '} >\r\n                {\r\n                    this.props.positionOfSquareInFormat > 0 ?\r\n                        this.ChemicalElement()\r\n                    :\r\n                        null\r\n                }\r\n\r\n                {\r\n                    this.props.positionOfSquareInFormat === 0 ?\r\n                        this.emptySquare()\r\n                    :\r\n                        null\r\n                }\r\n\r\n                {\r\n                    this.props.positionOfSquareInFormat < 0 ?\r\n                        this.tinySquare()\r\n                    :\r\n                        null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    \r\n    \r\n}\r\n\r\nSquare.propTypes = {\r\n\r\n    positionOfSquareInFormat : PropTypes.number.isRequired\r\n        \r\n}\r\n\r\nexport default Square;","import React, {Component} from 'react';\r\nimport Square from './../Components/Square'\r\nimport './../css/index.css'\r\n\r\n\r\nclass Matrix extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            selectedElements: undefined, \r\n            generatedSelectedElements: false\r\n        }\r\n        this.matrixFormat = require('./../Data/format.json');\r\n        this.selectedElements= this.setSelectedElements.bind(this);\r\n        this.generatedSelectedElements= this.setGeneratedSelectedElements.bind(this);\r\n    }\r\n\r\n    updateSelectedElements = (id) => {\r\n        const list = this.state.selectedElements; \r\n        const newList = list.filter(index => index != id)\r\n        this.setSelectedElements(newList);\r\n    }\r\n\r\n    setGeneratedSelectedElements= () => {\r\n        this.setState({\r\n            generatedSelectedElements: true\r\n        });\r\n    }\r\n\r\n    generatedList = () => {\r\n        var arr = [];\r\n        while(arr.length < 3){\r\n            var r = Math.floor(Math.random() * 118) + 1;\r\n            if(arr.indexOf(r) === -1) arr.push(r);\r\n        }\r\n        this.setSelectedElements(arr);\r\n    }\r\n\r\n    setSelectedElements(arr){\r\n        \r\n        this.setState({\r\n            selectedElements: arr\r\n        });\r\n        if (!this.state.generatedSelectedElements){\r\n            this.setGeneratedSelectedElements();\r\n        }\r\n    }\r\n\r\n    frameOfMatrix = (position, contend) => {\r\n        return(\r\n            <div className = {`row matrixFrame ${position}`}>\r\n                {contend}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    numberOfColumns = () => {\r\n        const columnsQuantity = this.matrixFormat[0].length+2 // (vertex)\r\n        const listOfColumnsId = Array.apply(null, {length: columnsQuantity}).map(Number.call, Number)\r\n        return(\r\n            <div className='row'>\r\n            {\r\n                listOfColumnsId.map((column, position)=>{\r\n                    if (position === 0 || position === 19 ){\r\n                        return this.frameOfMatrix('vertex',null)\r\n                    }\r\n                    else{\r\n                        return this.frameOfMatrix('numberOfColumn',position)\r\n                    }\r\n                })\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    matrixRows = () => {\r\n\r\n        return this.matrixFormat.map((rowFormat, position)=>{\r\n\r\n            var pos = undefined\r\n            if (position <= 6)\r\n                pos = position+1\r\n            else  \r\n                pos = null\r\n            return(\r\n                <div className=\"row\">\r\n                    {this.frameOfMatrix('numberOfRow',pos)}\r\n                    {rowFormat.map((cellIndex)=>{\r\n                        return(\r\n                            <Square\r\n                                positionOfSquareInFormat = {cellIndex}\r\n                                selectedElements= {this.state.selectedElements}\r\n                                updateSelectedElements = {this.updateSelectedElements}\r\n                            />\r\n                        )\r\n                    })}\r\n                    {this.frameOfMatrix('numberOfRow',pos)}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        \r\n        if(this.state.generatedSelectedElements === false){\r\n            this.generatedList()\r\n        }\r\n\r\n        return(\r\n            <div className=\"periodic-table\">\r\n                <div className=\"table\">\r\n                {this.numberOfColumns()}\r\n                {this.matrixRows()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default Matrix;","import React, {Component} from 'react';\r\nimport './../css/appHeader.css';\r\nimport './../css/index.css';\r\n\r\nclass AppHeader extends Component{\r\n    render(){\r\n        return(\r\n            <div className={'app-header'}>\r\n                <h1 className={'title'}>Periodic Table</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppHeader;","import React, {Component} from 'react';\r\nimport './../css/footer.css';\r\nimport './../css/index.css';\r\n\r\nimport './../css/index.css'\r\nimport './../css/colorsOfTheElements.css'\r\nimport './../css/chemicalElement.css'\r\n\r\n\r\nclass Footer extends Component{\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { \r\n            showDedicationMessage: false\r\n         };\r\n\r\n         this.toggleShowDedicationMessage = this.toggleShowDedicationMessage.bind(this);\r\n    }\r\n\r\n    toggleShowDedicationMessage() {\r\n        this.setState({\r\n            showDedicationMessage : !this.state.showDedicationMessage\r\n        });\r\n    }\r\n\r\n    dedicationMessage = () => {\r\n        if (this.state.showDedicationMessage){\r\n\r\n        return(\r\n            <div>\r\n                <div className={'overlay'} onClick={this.toggleShowDedicationMessage}></div>\r\n                <div className={'styleElementModal modal modal-page '}> \r\n                    <div className={'box'}>\r\n                            {\r\n                                <div className={'box-body-information'}>\r\n                                Created by:\r\n                                <div className={'box-header information alkali_metals'}> {/*  ${this.state.chemicalElement.group} */}\r\n                        \r\n                            <div className={'element-name'}>\r\n                                {'Mauro'}\r\n                            </div>\r\n\r\n                            <div className={'element-group'}>\r\n                                {'López'}\r\n                            </div>\r\n\r\n                            <div className={'element-group'}>\r\n                                {'Jiménez'}\r\n                            </div>\r\n                        </div>\r\n                                </div>  \r\n                            }\r\n\r\n                        <div className={'box-body'}>\r\n                            {\r\n                                <div className={'box-body-information-footer information amphigens'}>\r\n                                Mail: lopezjimenezmauro05@gmail.com\r\n                                </div>  \r\n                            }\r\n                            {\r\n                                <div className={'box-body-information-footer information noble_gases'}>\r\n                                Github: MLopezJ\r\n                                </div>  \r\n                            }\r\n                            {\r\n                                <div className={'box-body-information-footer information transition_metals'}>\r\n                                Twitter: MauroLopezJ\r\n                                </div>  \r\n                            }\r\n                            \r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div>\r\n                {this.dedicationMessage()}\r\n            <div className={'footer'}>\r\n                <div id=\"authorDescription\" onClick={this.toggleShowDedicationMessage}>\r\n                    <h1 className={'title'}>{'<MauroLopez/>'}</h1>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport './../css/index.css'\r\nimport './../css/colorsOfTheElements.css'\r\nimport './../css/chemicalElement.css'\r\n\r\n\r\nclass Modal extends Component{\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { \r\n            showInstructions: true\r\n         };\r\n\r\n         this.toggleShowInstructions = this.toggleShowInstructions.bind(this);\r\n    }\r\n\r\n    toggleShowInstructions() {\r\n        this.setState({\r\n            showInstructions : !this.state.showInstructions\r\n        });\r\n    }\r\n\r\n    instructions = () => {\r\n\r\n        return(\r\n            <div>\r\n                <div className={'overlay'} onClick={this.toggleShowInstructions}></div>\r\n                <div className={'styleElementModal modal modal-page '}> \r\n                    <div className={'box'}>\r\n                            {\r\n                                <div className={'box-body-information'}>\r\n                                \r\n                                    <div className={'box-header information alkali_metals'}>\r\n                        \r\n                                        <div className={'element-name'}>\r\n                                            {'How to play'}\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>  \r\n                            }\r\n\r\n                        <div className={'box-body'}>\r\n                            {\r\n                                <div className={'box-body-information-footer information amphigens'}>\r\n                                1: Identify the elements that are shaking\r\n                                </div>  \r\n                            }\r\n                            {\r\n                                <div className={'box-body-information-footer information noble_gases'}>\r\n                                2: Click on them\r\n                                </div>  \r\n                            }\r\n                            {\r\n                                <div className={'box-body-information-footer information transition_metals'}>\r\n                                3: Fill the correct name of the element\r\n                                </div>  \r\n                            }\r\n                            \r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        if (this.state.showInstructions){\r\n            return(\r\n                this.instructions()\r\n            )\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\nimport Matrix from './Components/Matrix';\r\nimport AppHeader from './Components/AppHeader';\r\nimport Footer from './Components/Footer';\r\nimport Instructions from './Components/Instructions';\r\n//import './App.css';\r\nimport './css/index.css'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className={'app'}>\r\n        <div className={'app-content'}>\r\n          <AppHeader/>\r\n          <Matrix/>\r\n          <Footer/>\r\n          <Instructions/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}