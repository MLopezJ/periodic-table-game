{"version":3,"sources":["Components/ChemicalElement.js","Components/Square.js","Components/Matrix.js","Components/AppHeader.js","Components/Footer.js","Components/Instructions.js","Components/EndOfGame.js","App.js","serviceWorker.js","index.js"],"names":["ChemicalElement","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setInputShadow","state","setState","inputShadow","setShake","shake","modalInfo","title","description","react_default","a","createElement","className","checkShake","props","elementsToGuess","index","findIndex","element","id","atomic","guessed","similarity","s1","s2","longer","shorter","length","longerLength","editDistance","parseFloat","costs","Array","i","lastValue","j","newValue","charAt","Math","min","textChange","event","handleTextChange","target","value","eventValue","toLowerCase","normalize","replace","stateValue","name","console","log","undefined","updateElementsToGuess","setCuriousFact","nameValue","inputText","concat","placeholder","onChange","card","window","innerWidth","cssStyle","symbol","onClick","toggleModalChemicalElementInformation","modalChemicalElementInformation","bind","assertThisInitialized","chemicalElementGroupName","text","atomicNumber","atomicMass","mass","electronicConfiguration","electronicConf","electronegativity","atomicRadius","ionRadius","ionicRadius","vanDelWaalsRadius","vanDerWaalsRadius","ionizationEnergy","ionicEnergic","electronAffinity","electronicAffinity","oxidationStates","oxidationState","Component","Square","emptySquare","tinySquare","getElement","assign","chemicalElements","find","item","positionOfSquareInFormat","lenguage","elementSpanish","chemicalElementsSpanish","group","prettyGroupName","Components_ChemicalElement","updateSelectedElements","chemicalElement","require","groupName","toUpperCase","slice","indicator","indexOf","substr","Matrix","setGeneratedSelectedElements","generatedSelectedElements","generatedList","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","createElementsToGuess","stop","frameOfMatrix","position","contend","numberOfColumns","columnsQuantity","matrixFormat","listOfColumnsId","apply","map","Number","column","matrixRows","rowFormat","pos","cellIndex","Components_Square","selectedElements","AppHeader","setTitle","elements","toggleLanguage","language","setLanguage","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","Footer","setShowSettings","Modal","returnElement","elementTitle","changeLanguage","howToPlay","chooseLanguage","aboutTheAuthor","exit","back","instructionHowToPlay1","instructionHowToPlay2","instructionHowToPlay3","language1","language2","author1","author2","modalTitle","modalTittle","handleLenguageChange","changeEvent","toggleLenguage","settings","toggleShowHowToPlay","toggleShowChooseLenguage","toggleShowAboutTheAuthor","type","checked","for","modal","showHowtoPlay","showAboutTheAuthor","showChooseLenguage","showInstructions","howToPlay1","howToPlay2","howToPlay3","toggleShowInstructions","toggleModalTittle","showSettings","EndOfGame","setTime","time","setMinutes","minutes","setSeconds","seconds","setObjetiveCompleted","objetiveCompleted","setPlayAgain","playAgain","showTime","timeElapsed","reloadPage","location","reload","showModal","App","setEndOfGame","endOfGame","setElementsToGuess","arr","floor","random","curiousFact","push","attribute","checkElementsGuessState","every","timeElapsedMillis","abs","Date","startTime","millisToMinutesAndSeconds","toggleText","textSpanish","textEnglish","millis","toFixed","Components_AppHeader","appHeader","Components_Matrix","elementModal","Components_Footer","footer","Instructions","instructions","Components_EndOfGame","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.77ee4d86.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { PropTypes } from \"prop-types\";\r\nimport './../css/index.css'\r\nimport './../css/colorsOfTheElements.css'\r\nimport './../css/chemicalElement.css'\r\n\r\nclass ChemicalElement extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            modalChemicalElementInformation : false, \r\n            shake : undefined,\r\n            nameValue : undefined, \r\n            inputShadow : undefined\r\n        }\r\n\r\n        this.toggleModalChemicalElementInformation = this.toggleModalChemicalElementInformation.bind(this);\r\n        this.shake = this.setShake.bind(this);\r\n        this.nameValue = this.handleTextChange.bind(this);\r\n        this.inputShadow = this.setInputShadow.bind(this);\r\n    }\r\n\r\n    \r\n\r\n    setInputShadow = (state) => {\r\n        this.setState({\r\n            inputShadow: state\r\n        });\r\n    }\r\n\r\n    setShake = (state) => {\r\n        this.setState({\r\n            shake: state\r\n        });\r\n    }\r\n\r\n    toggleModalChemicalElementInformation(){\r\n        this.setState({\r\n            modalChemicalElementInformation: !this.state.modalChemicalElementInformation\r\n        });\r\n    }\r\n\r\n\r\n    modalInfo = (title, description) => {\r\n        return(\r\n            <div className={'box-body-information'}>\r\n                <div className={'box-body-information-key'}>\r\n                    {title}\r\n                </div>\r\n                <div className={'box-body-information-value'}>\r\n                    {description} \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    checkShake = () => {\r\n        let shake = null\r\n        /*\r\n        if (this.props.selectedElements){\r\n            \r\n            shake = this.props.selectedElements.indexOf(this.props.element.atomic) === -1 ? false : \"shake\" ;\r\n            \r\n            if (shake){\r\n                this.setShake(true);\r\n            }\r\n        }\r\n        */\r\n\r\n        \r\n        if (this.props.elementsToGuess){\r\n            const index = this.props.elementsToGuess.findIndex(element => element.id === this.props.element.atomic);\r\n            const shakeA = index === -1 ? false : true ;\r\n            \r\n            if (shakeA && !this.props.elementsToGuess[index].guessed){\r\n                this.setShake(true);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    similarity = (s1, s2) => {\r\n        var longer = s1;\r\n        var shorter = s2;\r\n        if (s1.length < s2.length) {\r\n          longer = s2;\r\n          shorter = s1;\r\n        }\r\n        var longerLength = longer.length;\r\n        if (longerLength == 0) {\r\n          return 1.0;\r\n        }\r\n        return ((longerLength - this.editDistance(longer, shorter)) / parseFloat(longerLength)*100);\r\n    }\r\n\r\n    editDistance = (s1, s2) => {\r\n        //s1 = s1.toLowerCase();\r\n        //s2 = s2.toLowerCase();\r\n\r\n        var costs = new Array();\r\n        for (var i = 0; i <= s1.length; i++) {\r\n          var lastValue = i;\r\n          for (var j = 0; j <= s2.length; j++) {\r\n            if (i == 0)\r\n              costs[j] = j;\r\n            else {\r\n              if (j > 0) {\r\n                var newValue = costs[j - 1];\r\n                if (s1.charAt(i - 1) != s2.charAt(j - 1))\r\n                  newValue = Math.min(Math.min(newValue, lastValue),\r\n                    costs[j]) + 1;\r\n                costs[j - 1] = lastValue;\r\n                lastValue = newValue;\r\n              }\r\n            }\r\n          }\r\n          if (i > 0)\r\n            costs[s2.length] = lastValue;\r\n        }\r\n        return costs[s2.length];\r\n      }\r\n\r\n    textChange = (event) => {\r\n        \r\n        this.handleTextChange(event.target.value)\r\n\r\n        const eventValue = event.target.value.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n        const stateValue = this.props.element.name.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n        console.log(\"name \",this.props.element.name)\r\n        var similarity = this.similarity(stateValue,eventValue)\r\n        \r\n        if (event.target.value.length === 0){\r\n            this.setInputShadow(undefined)\r\n        }\r\n\r\n        if(similarity >= 0 && similarity < 30  && event.target.value.length > 1){\r\n            this.setInputShadow(\"inputShadowRed\")\r\n        }\r\n\r\n        if(similarity >= 30 && similarity < 70 ){\r\n            this.setInputShadow(\"inputShadowOrange\")\r\n        }\r\n\r\n        if(similarity >= 70 && similarity < 100 ){\r\n            this.setInputShadow(\"inputShadowGreen\")\r\n        }\r\n\r\n        if(stateValue == eventValue){\r\n            console.log(\"equals\")\r\n            this.props.updateElementsToGuess(\r\n                this.props.elementsToGuess, \r\n                this.props.element.atomic, \r\n                \"guessed\", \r\n                true\r\n            )\r\n            this.setShake(undefined);\r\n            this.props.setCuriousFact(this.props.element.atomic);\r\n        }\r\n        \r\n    }\r\n\r\n    handleTextChange = (value) => {\r\n        this.setState({nameValue: value});\r\n    }\r\n\r\n    inputText = () => {\r\n        \r\n        return(\r\n            <input className={`${this.state.inputShadow}`} placeholder= {\"??\"} value={this.state.nameValue} onChange={this.textChange} />\r\n        )\r\n    }\r\n\r\n    card = (shake) => {\r\n        if (window.innerWidth > 900){\r\n            return(\r\n            <div className={`periodic-table-element information ${this.props.element.cssStyle} ${shake ? \"shakeElement\":\"\"}`} >     \r\n                {<div className={'atomic'}>{this.props.element.atomic}</div> }\r\n                <div className={'symbol'}>{this.props.element.symbol}</div>\r\n                {shake?\r\n                    <div className={'name'}>??</div>\r\n                :\r\n                    <div className={'name'}>{this.props.element.name}</div>\r\n                }             \r\n                <canvas onClick={this.toggleModalChemicalElementInformation} className=\"ink\"></canvas>\r\n            </div>\r\n            ) \r\n        }\r\n        else{\r\n            return(\r\n            <div className={`periodic-table-element information ${this.props.element.cssStyle} ${shake ? \"shakeElement\":\"\"}`} >\r\n                            \r\n                <div className={'symbol'}>{this.props.element.symbol}</div>            \r\n                <canvas onClick={this.toggleModalChemicalElementInformation} className=\"ink\"></canvas>\r\n            </div>\r\n            ) \r\n        }\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        \r\n        const { shake } = this.state;\r\n\r\n        if(!this.state.shake){\r\n            this.checkShake()\r\n        }\r\n\r\n        return(\r\n            <div className = {'chemicalElement'}> \r\n                {\r\n                    this.props.element !== undefined ?\r\n                        this.card(shake)\r\n                    :\r\n                        null\r\n                }\r\n\r\n                {\r\n                    this.state.modalChemicalElementInformation ?\r\n                       <div>\r\n                           <div className={'overlay'} onClick={this.toggleModalChemicalElementInformation}></div>\r\n                            <div className={'styleElementModal modal modal-page '}> \r\n                                <div className={'box'}>\r\n\r\n                                    <div className={`box-header information ${this.props.element.cssStyle} `}>\r\n                                        <div className={'element-name'}>\r\n                                        {shake?\r\n                                            this.inputText()\r\n                                        :\r\n                                            this.props.element.name\r\n                                        } \r\n                                            \r\n                                        </div>\r\n\r\n                                        <div className={'element-group'}>\r\n                                            {this.props.chemicalElementGroupName}\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={'box-body'}>\r\n\r\n                                        {\r\n                                            this.props.element.atomic !== null && \r\n                                            this.modalInfo(this.props.text.atomicNumber, this.props.element.atomic) \r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.symbol &&\r\n                                            this.modalInfo(this.props.text.symbol, this.props.element.symbol)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.atomicMass &&\r\n                                            this.modalInfo(this.props.text.mass, this.props.element.atomicMass)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.electronicConfiguration &&\r\n                                            this.modalInfo(this.props.text.electronicConf, this.props.element.electronicConfiguration)\r\n                                        }\r\n\r\n                                        {\r\n                                            this.props.element.electronegativity &&\r\n                                            this.modalInfo(this.props.text.electronegativity, this.props.element.electronegativity)\r\n                                        }\r\n\r\n                                        {\r\n                                            this.props.element.atomicRadius &&\r\n                                            this.modalInfo(this.props.text.atomicRadius, this.props.element.atomicRadius)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.ionRadius &&\r\n                                            this.modalInfo(this.props.text.ionicRadius, `${this.props.element.ionRadius} pm`)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.vanDelWaalsRadius !== null &&\r\n                                            this.modalInfo(this.props.text.vanDerWaalsRadius, `${this.props.element.vanDelWaalsRadius} pm`)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.ionizationEnergy &&\r\n                                            this.modalInfo(this.props.text.ionicEnergic, `${this.props.element.ionizationEnergy} mol`)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.electronAffinity !== null &&\r\n                                            this.modalInfo(this.props.text.electronicAffinity, this.props.element.electronAffinity)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.oxidationStates &&\r\n                                            this.modalInfo(this.props.text.oxidationState, this.props.element.oxidationStates)\r\n                                        }\r\n                                        \r\n                                    </div>\r\n                                \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    :\r\n                        null\r\n                }\r\n                \r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nChemicalElement.propTypes = {\r\n\r\n    atomicNumber : PropTypes.number.isRequired\r\n        \r\n}\r\n\r\nexport default ChemicalElement;","import React, {Component} from 'react';\r\nimport { PropTypes } from \"prop-types\";\r\nimport ChemicalElement from './../Components/ChemicalElement'\r\nimport './../css/index.css'\r\n\r\n\r\nclass Square extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            chemicalElement : undefined,\r\n            modalChemicalElementInformation : false, \r\n            chemicalElementGroupName : undefined,\r\n            shake : undefined,\r\n            nameValue : undefined, \r\n            inputShadow : undefined,\r\n            chemicalElementsSpanish : undefined,\r\n            lenguage : undefined\r\n        }\r\n\r\n        this.chemicalElements = require('./../Data/chemicalElements');\r\n        this.chemicalElementsSpanish = require('./../Data/chemicalElementsSpanish');\r\n    }\r\n\r\n    emptySquare = () => (\r\n        <div className={'Empty'}>\r\n        </div>\r\n    )\r\n\r\n    tinySquare = () => (\r\n        <div className={'Tiny'}>\r\n        </div>\r\n    )\r\n\r\n    getElement = () => {\r\n        let element = Object.assign(\r\n            {},\r\n            this.chemicalElements.find(\r\n                item => item.atomic === this.props.positionOfSquareInFormat\r\n            )\r\n        )\r\n        \r\n        if (this.props.lenguage === \"Spanish\"){\r\n            const elementSpanish = this.chemicalElementsSpanish.find(item => item.atomic === this.props.positionOfSquareInFormat)\r\n            element.name = elementSpanish.name;\r\n            element.group = elementSpanish.group;\r\n        }\r\n\r\n        return element\r\n\r\n    }\r\n\r\n    prettyGroupName(groupName){\r\n        groupName =  groupName.charAt(0).toUpperCase() + groupName.slice(1)\r\n        var index\r\n        var indicator = true\r\n        while(indicator){\r\n            index = groupName.indexOf('_')\r\n            if (index === -1)\r\n                indicator = false;\r\n            else{\r\n                groupName  = groupName.substr(0,index)+' '+ groupName.substr(index+1, groupName.length-1)\r\n            }  \r\n        }\r\n        \r\n        return groupName\r\n    }\r\n\r\n    ChemicalElement = () => {\r\n        const element = this.getElement();\r\n        const chemicalElementGroupName = this.prettyGroupName(element.group);\r\n\r\n        // Agregar los datos curiosos a lista de elementos seleccionados\r\n        \r\n        return(\r\n            <ChemicalElement\r\n                element = {element}\r\n                chemicalElementGroupName = {chemicalElementGroupName}\r\n                elementsToGuess= {this.props.elementsToGuess} \r\n                updateSelectedElements = {this.props.updateSelectedElements}\r\n                updateElementsToGuess = {this.props.updateElementsToGuess}\r\n                text = {this.props.text}\r\n                setCuriousFact = {this.props.setCuriousFact}\r\n            />\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={'Square '} >\r\n                {\r\n                    this.props.positionOfSquareInFormat > 0 ?\r\n                        this.ChemicalElement()\r\n                    :\r\n                        null\r\n                }\r\n\r\n                {\r\n                    this.props.positionOfSquareInFormat === 0 ?\r\n                        this.emptySquare()\r\n                    :\r\n                        null\r\n                }\r\n\r\n                {\r\n                    this.props.positionOfSquareInFormat < 0 ?\r\n                        this.tinySquare()\r\n                    :\r\n                        null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    \r\n    \r\n}\r\n\r\nSquare.propTypes = {\r\n\r\n    positionOfSquareInFormat : PropTypes.number.isRequired\r\n        \r\n}\r\n\r\nexport default Square;","import React, {Component} from 'react';\r\nimport Square from './../Components/Square'\r\nimport './../css/index.css'\r\n\r\n\r\nclass Matrix extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            selectedElements: undefined, \r\n            generatedSelectedElements: false\r\n        }\r\n        this.matrixFormat = require('./../Data/format.json');\r\n    }\r\n\r\n    setGeneratedSelectedElements= () => {\r\n        this.setState({\r\n            generatedSelectedElements: true\r\n        });\r\n    }\r\n\r\n    generatedList = async() => {\r\n        this.props.createElementsToGuess()\r\n        if (!this.state.generatedSelectedElements){\r\n            this.setGeneratedSelectedElements();\r\n        }\r\n    }\r\n\r\n    frameOfMatrix = (position, contend) => {\r\n        return(\r\n            <div className = {`row matrixFrame ${position}`}>\r\n                {contend}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    numberOfColumns = () => {\r\n        const columnsQuantity = this.matrixFormat[0].length+2 // (vertex)\r\n        const listOfColumnsId = Array.apply(null, {length: columnsQuantity}).map(Number.call, Number)\r\n        return(\r\n            <div className='row'>\r\n            {\r\n                listOfColumnsId.map((column, position)=>{\r\n                    if (position === 0 || position === 19 ){\r\n                        return this.frameOfMatrix('vertex',null)\r\n                    }\r\n                    else{\r\n                        return this.frameOfMatrix('numberOfColumn',position)\r\n                    }\r\n                })\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    matrixRows = () => {\r\n\r\n        return this.matrixFormat.map((rowFormat, position)=>{\r\n\r\n            var pos = undefined\r\n            if (position <= 6)\r\n                pos = position+1\r\n            else  \r\n                pos = null\r\n            return(\r\n                <div className=\"row\">\r\n                    {this.frameOfMatrix('numberOfRow',pos)}\r\n                    {rowFormat.map((cellIndex)=>{\r\n                        return(\r\n                            <Square\r\n                                positionOfSquareInFormat = {cellIndex}\r\n                                elementsToGuess= {this.props.elementsToGuess}\r\n                                updateElementsToGuess = {this.props.updateElementsToGuess}\r\n                                lenguage = {this.props.lenguage}\r\n                                text = {this.props.text}\r\n                                setCuriousFact = {this.props.setCuriousFact}\r\n                            />\r\n                        )\r\n                    })}\r\n                    {this.frameOfMatrix('numberOfRow',pos)}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        \r\n        if(this.state.generatedSelectedElements === false){\r\n            this.generatedList()\r\n        }\r\n\r\n        if (this.props.elementsToGuess){\r\n            return(\r\n                <div className=\"periodic-table\">\r\n                    <div className=\"table\">\r\n                    {this.numberOfColumns()}\r\n                    {this.matrixRows()}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            // return loading view\r\n            return( null )\r\n        }\r\n        \r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default Matrix;","import React, {Component} from 'react';\r\nimport './../css/appHeader.css';\r\nimport './../css/index.css';\r\n\r\nclass AppHeader extends Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            title : undefined,\r\n            language : undefined\r\n        }\r\n        this.setTitle = this.setTitle.bind(this);\r\n        this.toggleLanguage = this.toggleLanguage.bind(this);\r\n    }\r\n\r\n    setTitle = () => {\r\n        const title = this.props.text.elements.find(\r\n            item => item.id === \"title\"\r\n        )\r\n        \r\n        this.setState({\r\n            title: title.text\r\n        });\r\n    }\r\n\r\n    toggleLanguage = (language) => {\r\n        this.setState({\r\n            language : language\r\n        });\r\n    }\r\n\r\n    setLanguage = () => {\r\n        \r\n        this.toggleLanguage(this.props.language)\r\n        this.setTitle();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setLanguage()\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n        if (prevProps.language == this.props.language & this.props.language != this.state.language){\r\n            this.setLanguage()\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={'app-header'}>\r\n                <h1 className={'title'}>{this.state.title}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppHeader;","import React, {Component} from 'react';\r\nimport './../css/footer.css';\r\nimport './../css/index.css';\r\n\r\nimport './../css/index.css'\r\nimport './../css/colorsOfTheElements.css'\r\nimport './../css/chemicalElement.css'\r\n\r\n\r\nclass Footer extends Component{\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { \r\n            title : undefined,\r\n            language : undefined\r\n         };\r\n\r\n        this.setTitle = this.setTitle.bind(this);\r\n        this.toggleLanguage = this.toggleLanguage.bind(this);   \r\n    }\r\n\r\n    setTitle = () => {\r\n        const title = this.props.text.elements.find(\r\n            item => item.id === \"title\"\r\n        )\r\n        \r\n        this.setState({\r\n            title: title.text\r\n        });\r\n    }\r\n\r\n    toggleLanguage = (language) => {\r\n        this.setState({\r\n            language : language\r\n        });\r\n    }\r\n\r\n    setLanguage = () => {\r\n        this.toggleLanguage(this.props.language)\r\n        this.setTitle();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setLanguage()\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n        if (prevProps.language == this.props.language & this.props.language != this.state.language){\r\n            this.setLanguage()\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div>\r\n                <div className={'footer'}>\r\n                    <div id=\"settings\" onClick={this.props.setShowSettings}>\r\n                        <h1 className={'title'}>{this.state.title}</h1>\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport './../css/index.css'\r\nimport './../css/colorsOfTheElements.css'\r\nimport './../css/chemicalElement.css'\r\n\r\n\r\nclass Modal extends Component{\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { \r\n            showInstructions: false, \r\n            showHowtoPlay : false, \r\n            showAboutTheAuthor : false, \r\n            showChooseLenguage : false,\r\n            modalTittle : \"Settings\",\r\n            title : undefined,\r\n            language : undefined,\r\n            howToPlay: undefined,\r\n            chooseLanguage : undefined,\r\n            aboutTheAuthor: undefined,\r\n            exit: undefined,\r\n            back: undefined, \r\n\r\n            howToPlay1: undefined,\r\n            howToPlay2: undefined,\r\n            howToPlay3: undefined, \r\n\r\n            language1: undefined, \r\n            language2: undefined\r\n        };\r\n\r\n        this.toggleShowInstructions = this.toggleShowInstructions.bind(this);\r\n        this.toggleShowHowToPlay = this.toggleShowHowToPlay.bind(this);\r\n        this.toggleShowAboutTheAuthor = this.toggleShowAboutTheAuthor.bind(this);\r\n        this.toggleShowChooseLenguage = this.toggleShowChooseLenguage.bind(this);\r\n        this.toggleModalTittle = this.toggleModalTittle.bind(this);\r\n        this.setTitle = this.setTitle.bind(this);\r\n        this.toggleLanguage = this.toggleLanguage.bind(this);\r\n    }\r\n\r\n    returnElement = (elementTitle) => {\r\n        \r\n        const element = this.props.text.elements.find(\r\n            item => item.id === elementTitle\r\n        )\r\n        return element\r\n    }\r\n\r\n    setTitle = (changeLanguage) => {\r\n        const title = this.returnElement(\"modalTitle\");\r\n        const howToPlay = this.returnElement(\"howToPlayTitle\");\r\n        const chooseLanguage = this.returnElement(\"languageTitle\");\r\n        const aboutTheAuthor = this.returnElement(\"aboutTheAuthorTitle\");\r\n        const exit = this.returnElement(\"exitTitle\");\r\n        const back = this.returnElement(\"back\");\r\n\r\n        const instructionHowToPlay1 = this.returnElement(\"instructionHowToPlay1\");\r\n        const instructionHowToPlay2 = this.returnElement(\"instructionHowToPlay2\");\r\n        const instructionHowToPlay3 = this.returnElement(\"instructionHowToPlay3\");\r\n\r\n        const language1 = this.returnElement(\"language1\");\r\n        const language2 = this.returnElement(\"language2\");\r\n\r\n        const author1 = this.returnElement(\"author1\");\r\n        const author2 = this.returnElement(\"author2\");\r\n\r\n\r\n\r\n        const modalTitle = changeLanguage ? chooseLanguage.text : title.text\r\n\r\n        this.setState({\r\n            title: title.text,\r\n            modalTittle : modalTitle,\r\n            howToPlay: howToPlay.text,\r\n            chooseLanguage: chooseLanguage.text,\r\n            aboutTheAuthor: aboutTheAuthor.text,\r\n            exit: exit.text,\r\n            back: back.text,\r\n\r\n            instructionHowToPlay1 : instructionHowToPlay1.text,\r\n            instructionHowToPlay2 : instructionHowToPlay2.text,\r\n            instructionHowToPlay3 : instructionHowToPlay3.text, \r\n            \r\n            language1: language1.text,\r\n            language2: language2.text, \r\n\r\n            author1: author1.text,\r\n            author2: author2.text\r\n        });\r\n    }\r\n\r\n    toggleLanguage = (language) => {\r\n        this.setState({\r\n            language : language\r\n        });\r\n    }\r\n\r\n    setLanguage = (changeLanguage) => {\r\n        \r\n        this.toggleLanguage(this.props.language)\r\n        this.setTitle(changeLanguage);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setLanguage()\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n        \r\n        if (prevProps.language == this.props.language & this.props.language != this.state.language){\r\n            this.setLanguage(true)\r\n        }\r\n    }\r\n\r\n    toggleModalTittle(title) {\r\n        const modalTittle = title ? title : this.state.title;\r\n        this.setState({\r\n            modalTittle : modalTittle\r\n        });\r\n    }\r\n\r\n    toggleShowInstructions() {\r\n        this.setState({\r\n            showInstructions : !this.state.showInstructions\r\n        });\r\n    }\r\n\r\n    toggleShowChooseLenguage () {\r\n        this.setState({\r\n            showChooseLenguage : !this.state.showChooseLenguage\r\n        });\r\n        const modalTittle = !this.state.showChooseLenguage ? this.state.chooseLanguage : null;\r\n        this.toggleModalTittle(modalTittle);\r\n    }\r\n\r\n    toggleShowAboutTheAuthor () {\r\n        this.setState({\r\n            showAboutTheAuthor : !this.state.showAboutTheAuthor\r\n        });\r\n        const modalTittle = !this.state.showAboutTheAuthor ? \"Mauro López\" : null;\r\n        this.toggleModalTittle(modalTittle);\r\n    }\r\n\r\n    toggleShowHowToPlay() {\r\n        this.setState({\r\n            showHowtoPlay : !this.state.showHowtoPlay\r\n        });\r\n        const modalTittle = !this.state.showHowtoPlay ? this.state.howToPlay : null;\r\n        this.toggleModalTittle(modalTittle);\r\n    }\r\n\r\n    handleLenguageChange = (changeEvent) => {\r\n        this.props.toggleLenguage(changeEvent.target.value);\r\n    }\r\n\r\n    settings = () => {\r\n        return (\r\n            <div className={'box-body'}>\r\n                {\r\n                    <div className={'box-body-information-footer information amphigens'}\r\n                    onClick={this.toggleShowHowToPlay}>\r\n                    1: {this.state.howToPlay}\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information noble_gases'}\r\n                    onClick={this.toggleShowChooseLenguage}>\r\n                    2: {this.state.chooseLanguage}\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information transition_metals'}\r\n                    onClick={this.toggleShowAboutTheAuthor}>\r\n                    3: {this.state.aboutTheAuthor}\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information metalloids'}\r\n                    onClick={this.props.setShowSettings}>\r\n                    {this.state.exit}\r\n                    </div>  \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    howToPlay = () => {\r\n        return (\r\n            <div className={'box-body'}>\r\n                {\r\n                    <div className={'box-body-information-footer information amphigens'}>\r\n                    1: {this.state.instructionHowToPlay1}\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information noble_gases'}>\r\n                    2: {this.state.instructionHowToPlay2}\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information transition_metals'}>\r\n                    3: {this.state.instructionHowToPlay3}\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information transition_metals'}\r\n                    onClick={this.toggleShowHowToPlay}>\r\n                    {this.state.back}\r\n                    </div>  \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    lenguage = () => {\r\n        return (\r\n            <div className={'box-body'}>\r\n                {\r\n                    <div className={'box-body-information-footer information amphigens'}>\r\n                    <div></div>\r\n                    \r\n                    <input type=\"radio\" id=\"lenguage1\" name=\"lenguage\" value=\"Spanish\" \r\n                    checked = {this.props.language === \"Spanish\"}\r\n                    onChange= {this.handleLenguageChange}></input>\r\n                    <label for=\"lenguage1\">{this.state.language1}</label>\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information noble_gases'}>\r\n                    \r\n                    <input type=\"radio\" id=\"lenguage2\" name=\"lenguage\" value=\"English\"\r\n                    checked = {this.props.language === \"English\"}\r\n                    onChange= {this.handleLenguageChange}>\r\n                    </input>\r\n                    <label for=\"lenguage2\">{this.state.language2}</label>\r\n                    \r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information transition_metals'}\r\n                    onClick={this.toggleShowChooseLenguage}>\r\n                    {this.state.back}\r\n                    </div>  \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    aboutTheAuthor = () => {\r\n        return(\r\n            <div className={'box-body'}>     \r\n                {\r\n                    <div className={'box-body-information-footer information basic_metals'}>\r\n                    {this.state.author1}\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information actinoids'}>\r\n                    {this.state.author2}\r\n                    </div>  \r\n                }\r\n\r\n                {\r\n                    <div className={'box-body-information-footer information amphigens'}>\r\n                    Mail: lopezjimenezmauro05@gmail.com\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information noble_gases'}>\r\n                    Github: MLopezJ\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information transition_metals'}>\r\n                    Twitter: MauroLopezJ\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information metalloids'}\r\n                    onClick={this.toggleShowAboutTheAuthor}>\r\n                    {this.state.back}\r\n                    </div>  \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    modal = () => {\r\n\r\n        return(\r\n            <div>\r\n                <div className={'overlay'} onClick={this.props.setShowSettings}></div>\r\n                <div className={'styleElementModal modal modal-page '}> \r\n                    <div className={'box'}>\r\n                            {\r\n                                <div className={'box-body-information'}>\r\n                                \r\n                                    <div className={'box-header information alkali_metals'}>\r\n                        \r\n                                        <div className={'element-name'}>\r\n                                            {`${this.state.modalTittle}`}\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>  \r\n                            }\r\n\r\n                        <div className={'box-body'}>\r\n                        {this.state.showHowtoPlay ? this.howToPlay() : null }\r\n                        {this.state.showAboutTheAuthor ? this.aboutTheAuthor() : null }\r\n                        {this.state.showChooseLenguage ? this.lenguage() : null }\r\n                        {!this.state.showHowtoPlay && !this.state.showAboutTheAuthor\r\n                        && !this.state.showChooseLenguage ?\r\n                            this.settings() : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        \r\n        if (this.props.showSettings){\r\n            return(\r\n                this.modal()\r\n            )\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, {Component} from 'react';\r\nimport './../css/index.css'\r\nimport './../css/colorsOfTheElements.css'\r\nimport './../css/chemicalElement.css'\r\n\r\n\r\nclass EndOfGame extends Component{\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            title : undefined,\r\n            time: undefined,\r\n            minutes : undefined,\r\n            seconds : undefined,\r\n            objetiveCompleted : undefined,\r\n            language : undefined, \r\n            playAgain : undefined\r\n        }\r\n\r\n        this.setTitle = this.setTitle.bind(this);\r\n        this.setMinutes = this.setMinutes.bind(this);\r\n        this.setTime = this.setTime.bind(this);\r\n        this.setSeconds = this.setSeconds.bind(this);\r\n        this.setObjetiveCompleted = this.setObjetiveCompleted.bind(this);\r\n        this.setPlayAgain = this.setPlayAgain.bind(this);\r\n        this.toggleLanguage = this.toggleLanguage.bind(this);\r\n    }\r\n\r\n    setTitle = () => {\r\n        const title = this.props.text.elements.find(\r\n            item => item.id === \"title\"\r\n        )\r\n        \r\n        this.setState({\r\n            title: title.text\r\n        });\r\n    }\r\n\r\n    setTime = () => {\r\n        const time = this.props.text.elements.find(\r\n            item => item.id === \"time\"\r\n        )\r\n        \r\n        this.setState({\r\n            time: time.text\r\n        });\r\n    }\r\n\r\n    setMinutes = () => {\r\n        const minutes = this.props.text.elements.find(\r\n            item => item.id === \"minutes\"\r\n        )\r\n        \r\n        this.setState({\r\n            minutes: minutes.text\r\n        });\r\n    }\r\n\r\n    setSeconds = () => {\r\n        const seconds = this.props.text.elements.find(\r\n            item => item.id === \"seconds\"\r\n        )\r\n        \r\n        this.setState({\r\n            seconds: seconds.text\r\n        });\r\n    }\r\n\r\n    setObjetiveCompleted = () => {\r\n        const objetiveCompleted = this.props.text.elements.find(\r\n            item => item.id === \"objetiveCompleted\"\r\n        )\r\n        \r\n        this.setState({\r\n            objetiveCompleted: objetiveCompleted.text\r\n        });\r\n    }\r\n\r\n    setPlayAgain = () => {\r\n        const playAgain = this.props.text.elements.find(\r\n            item => item.id === \"playAgain\"\r\n        )\r\n        \r\n        this.setState({\r\n            playAgain: playAgain.text\r\n        });\r\n    }\r\n\r\n    toggleLanguage = (language) => {\r\n        this.setState({\r\n            language : language\r\n        });\r\n    }\r\n\r\n    setLanguage = () => {\r\n        \r\n        this.toggleLanguage(this.props.language)\r\n        this.setTitle();\r\n        this.setTime();\r\n        this.setMinutes();\r\n        this.setSeconds();\r\n        this.setObjetiveCompleted();\r\n        this.setPlayAgain();\r\n    }\r\n\r\n    showTime = () => {\r\n        const text = this.props.timeElapsed[0] > 0 ? \r\n            this.props.timeElapsed[0] + \" \" + this.state.minutes + \" : \" + this.props.timeElapsed[1] + \" \" + this.state.seconds\r\n            :\r\n            this.props.timeElapsed[1] + \" \" + this.state.seconds\r\n\r\n        return(\r\n            <div className={'box-body-information-footer information noble_gases'}>\r\n            {this.state.time} = {text}\r\n            </div> \r\n        )\r\n    }\r\n\r\n    reloadPage = () => {\r\n        window.location.reload()\r\n    }\r\n\r\n    playAgain = () => {\r\n        return(\r\n            <div className={'box-body-information-footer information transition_metals'}\r\n            onClick = {this.reloadPage}>\r\n                {this.state.playAgain}\r\n            </div> \r\n        ) \r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setLanguage()\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n        if (prevProps.language == this.props.language & this.props.language != this.state.language){\r\n            this.setLanguage()\r\n        }\r\n    }\r\n\r\n    modal = () => {\r\n\r\n        return(\r\n            <div>\r\n                <div className={'overlay'} onClick={null}></div>\r\n                <div className={'styleElementModal modal modal-page '}> \r\n                    <div className={'box'}>\r\n                    {\r\n                        <div className={'box-body-information'}>\r\n                        \r\n                            <div className={'box-header information alkali_metals'}>\r\n                \r\n                                <div className={'element-name'}>\r\n                                    {this.state.title}\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>  \r\n                    }\r\n\r\n                    <div className={'box-body'}>\r\n\r\n                        <div className={'box-body'}>\r\n                            {\r\n                                <div className={'box-body-information-footer information amphigens'}>\r\n                                {this.state.objetiveCompleted}\r\n                                </div>  \r\n                            }\r\n                            {\r\n                                this.showTime()\r\n                            }\r\n\r\n                            {\r\n                                this.playAgain()\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        \r\n        if (this.props.showModal){\r\n            return(\r\n                this.modal()\r\n            )\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\nexport default EndOfGame;","import React, { Component } from 'react';\r\nimport Matrix from './Components/Matrix';\r\nimport AppHeader from './Components/AppHeader';\r\nimport Footer from './Components/Footer';\r\nimport Instructions from './Components/Instructions';\r\nimport EndOfGame from './Components/EndOfGame';\r\n//import './App.css';\r\nimport './css/index.css'\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n        showSettings: true,\r\n        language: \"Spanish\",\r\n        text : require('./Data/textSpanish.json'), \r\n        elementsToGuess : undefined, \r\n        endOfGame : false\r\n    }\r\n    this.setShowSettings = this.setShowSettings.bind(this);\r\n    this.toggleLenguage = this.toggleLenguage.bind(this);\r\n    this.setElementsToGuess = this.setElementsToGuess.bind(this);\r\n    this.setEndOfGame = this.setEndOfGame.bind(this);\r\n    this.updateElementsToGuess = this.updateElementsToGuess.bind(this);\r\n    this.textEnglish = require('./Data/text.json');\r\n    this.textSpanish = require('./Data/textSpanish.json');\r\n    this.startTime = undefined;\r\n    this.timeElapsed = undefined;\r\n}\r\n\r\nsetEndOfGame = () => {\r\n  this.setState({\r\n    endOfGame: !this.state.endOfGame\r\n  });\r\n}\r\n\r\nsetElementsToGuess = (arr) => {\r\n  this.setState({\r\n    elementsToGuess: arr\r\n  });\r\n}\r\n\r\ncreateElementsToGuess = () => {\r\n  var arr = [];\r\n  while(arr.length < 3){\r\n    var id = Math.floor(Math.random() * 118) + 1;\r\n    var element = {\r\n        id: id,\r\n        guessed : false,\r\n        curiousFact : null\r\n    }\r\n    if((arr.findIndex(element => element.id === id)) === -1 ) arr.push(element);\r\n  }\r\n  this.setElementsToGuess(arr);\r\n}\r\n\r\nupdateElementsToGuess = (arr, id, attribute, value) => {\r\n  var index = arr.findIndex(element => element.id === id) \r\n  if (index !== -1){\r\n    arr[index][attribute] = value\r\n  }\r\n  this.setElementsToGuess(arr);\r\n}\r\n\r\nsetCuriousFact = (id) => {\r\n  const curiousFact = \"something\"; // add custom curious fact \r\n  this.updateElementsToGuess(this.state.elementsToGuess, id, \"curiousFact\", curiousFact);\r\n  this.checkElementsGuessState();\r\n}\r\n\r\ncheckElementsGuessState = () => {\r\n  const allElementsGuessed = this.state.elementsToGuess.every( element => {\r\n    return element.guessed === true ;\r\n  })\r\n\r\n  if (allElementsGuessed){\r\n    var timeElapsedMillis = Math.abs(new Date() - this.startTime);\r\n    var timeElapsed = this.millisToMinutesAndSeconds(timeElapsedMillis);\r\n    this.timeElapsed = timeElapsed;\r\n    this.setEndOfGame();\r\n  }\r\n}\r\n\r\ntoggleText = () => {\r\n  const text = this.state.language === \"Spanish\" ? this.textSpanish : this.textEnglish;\r\n  \r\n  this.setState({\r\n    text: text\r\n  });\r\n}\r\n\r\nmillisToMinutesAndSeconds = (millis) => {\r\n  const minutes = Math.floor(millis / 60000);\r\n  const seconds = ((millis % 60000) / 1000).toFixed(0);\r\n  const time = [minutes, seconds];\r\n  return time;\r\n}\r\n\r\nsetShowSettings = () => {\r\n  this.setState({\r\n    showSettings: !this.state.showSettings\r\n  });\r\n  if (this.startTime === undefined){\r\n    this.startTime = new Date();\r\n  }\r\n}\r\n\r\ntoggleLenguage = (language) => {\r\n  this.setState({\r\n    language: language\r\n  });\r\n}\r\n\r\nchangeLanguage = (language) => {\r\n  this.toggleLenguage(language);\r\n  this.toggleText();\r\n}\r\n\r\ncomponentDidMount = () => {\r\n  this.toggleText();\r\n}\r\n\r\ncomponentDidUpdate = (prevProps, prevState, snapshot) => {\r\n  \r\n  if(prevState.language !=  this.state.language){\r\n    this.toggleText();\r\n  }\r\n}\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className={'app'}>\r\n        <div className={'app-content'}>\r\n          <AppHeader\r\n            text = {this.state.text.appHeader}\r\n            language = {this.state.language}\r\n          />\r\n          <Matrix\r\n            lenguage = {this.state.language}\r\n            text = {this.state.text.elementModal}\r\n            elementsToGuess = {this.state.elementsToGuess}\r\n            createElementsToGuess = {this.createElementsToGuess}\r\n            updateElementsToGuess = {this.updateElementsToGuess}\r\n            setCuriousFact = {this.setCuriousFact}\r\n          />\r\n          <Footer\r\n            setShowSettings = {this.setShowSettings}\r\n            text = {this.state.text.footer}\r\n            language = {this.state.language}\r\n          />\r\n          <Instructions\r\n            showSettings = {this.state.showSettings}\r\n            setShowSettings = {this.setShowSettings}\r\n            text = {this.state.text.instructions} \r\n            language = {this.state.language}\r\n            toggleLenguage = {this.changeLanguage}\r\n          />\r\n          <EndOfGame\r\n            text = {this.state.text.endOfGame}\r\n            language = {this.state.language}\r\n            showModal = {this.state.endOfGame}\r\n            timeElapsed = {this.timeElapsed}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}