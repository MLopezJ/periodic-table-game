{"version":3,"sources":["Components/ChemicalElement.js","Components/Square.js","Components/Matrix.js","Components/AppHeader.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["ChemicalElement","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setShake","state","setState","shake","componentDidMount","element","chemicalElements","find","item","atomic","props","atomicNumber","setChemicalElement","info","title","description","react_default","a","createElement","className","checkShake","selectedElements","indexOf","chemicalElement","textChange","event","handleTextChange","target","value","console","log","name","toLowerCase","updateSelectedElements","undefined","nameValue","inputText","placeholder","onChange","modalChemicalElementInformation","chemicalElementGroupName","bind","assertThisInitialized","toggleModalChemicalElementInformation","prettyGroupName","require","groupName","index","charAt","toUpperCase","slice","indicator","substr","length","group","concat","symbol","onClick","atomicMass","electronicConfiguration","electronegativity","atomicRadius","ionRadius","vanDelWaalsRadius","ionizationEnergy","electronAffinity","oxidationStates","Component","Square","emptySquare","tinySquare","Components_ChemicalElement","positionOfSquareInFormat","Matrix","id","newList","filter","setSelectedElements","setGeneratedSelectedElements","generatedSelectedElements","generatedList","arr","r","Math","floor","random","push","frameOfMatrix","position","contend","numberOfColumns","columnsQuantity","matrixFormat","listOfColumnsId","Array","apply","map","Number","column","matrixRows","rowFormat","pos","cellIndex","Components_Square","AppHeader","Footer","dedicationMessage","showDedicationMessage","toggleShowDedicationMessage","App","Components_AppHeader","Components_Matrix","Components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"i56DAsPeA,+BA9OX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAiBJI,SAAW,SAACC,GACRR,EAAKS,SAAS,CACVC,MAAOF,KApBDR,EAuDdW,kBAAoB,WAChB,IAAMC,EAAUZ,EAAKa,iBAAiBC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAAWhB,EAAKiB,MAAMC,eAC9ElB,EAAKmB,mBAAmBP,IAzDdZ,EA4DdoB,KAAO,SAACC,EAAOC,GACX,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,wBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,4BACXL,GAELE,EAAAC,EAAAC,cAAA,OAAKC,UAAW,8BACXJ,KAnEHtB,EAyEd2B,WAAa,WAEL3B,EAAKiB,MAAMW,oBAEyE,IAA5E5B,EAAKiB,MAAMW,iBAAiBC,QAAQ7B,EAAKQ,MAAMsB,gBAAgBd,SAAyB,UAG5FhB,EAAKO,UAAS,IAhFZP,EAqFd+B,WAAa,SAACC,GAEVhC,EAAKiC,iBAAiBD,EAAME,OAAOC,OAEnCC,QAAQC,IAAI,QAAQrC,EAAKQ,MAAMsB,gBAAgBQ,MAE5CtC,EAAKQ,MAAMsB,gBAAgBQ,KAAKC,eAAiBP,EAAME,OAAOC,MAAMI,gBACnEH,QAAQC,IAAI,UACZrC,EAAKiB,MAAMuB,uBAAuBxC,EAAKQ,MAAMsB,gBAAgBd,QAC7DhB,EAAKO,cAASkC,KA9FRzC,EAmGdiC,iBAAmB,SAACE,GAChBnC,EAAKS,SAAS,CAACiC,UAAWP,KApGhBnC,EAuGd2C,UAAY,WACR,OACIpB,EAAAC,EAAAC,cAAA,YAAUmB,YAAc,KAAMT,MAAOnC,EAAKQ,MAAMkC,UAAWG,SAAU7C,EAAK+B,cAvG9E/B,EAAKQ,MAAQ,CACTsB,qBAAkBW,EAClBK,iCAAkC,EAClCC,8BAA2BN,EAC3B/B,WAAQ+B,EACRC,eAAYD,GAGhBzC,EAAKmB,mBAAqBnB,EAAKmB,mBAAmB6B,KAAxB/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KAC1BA,EAAKkD,sCAAwClD,EAAKkD,sCAAsCF,KAA3C/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KAC7CA,EAAKmD,gBAAkBnD,EAAKmD,gBAAgBH,KAArB/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KACvBA,EAAKa,iBAAmBuC,EAAQ,IAChCpD,EAAKU,MAAQV,EAAKO,SAASyC,KAAd/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KACbA,EAAK0C,UAAY1C,EAAKiC,iBAAiBe,KAAtB/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KAfPA,+EAwBEqD,GAEZ,IAAIC,EADJD,EAAaA,EAAUE,OAAO,GAAGC,cAAgBH,EAAUI,MAAM,GAGjE,IADA,IAAIC,GAAY,EACVA,IAEa,KADfJ,EAAQD,EAAUxB,QAAQ,MAEtB6B,GAAY,EAEZL,EAAaA,EAAUM,OAAO,EAAEL,GAAO,IAAKD,EAAUM,OAAOL,EAAM,EAAGD,EAAUO,OAAO,GAI/FzD,KAAKM,SAAS,CACVsC,yBAA0BM,oEAK9BlD,KAAKgD,gBAAgBhD,KAAKK,MAAMsB,gBAAgB+B,OAChD1D,KAAKM,SAAS,CACVqC,iCAAkC3C,KAAKK,MAAMsC,6EAIlClC,GACfT,KAAKM,SAAS,CACVqB,gBAAiBlB,qCA4DjB,IACIF,EAAUP,KAAKK,MAAfE,MAMR,OAJIP,KAAKK,MAAME,OACXP,KAAKwB,aAILJ,EAAAC,EAAAC,cAAA,OAAKC,UAAa,wBAEqBe,IAA/BtC,KAAKK,MAAMsB,gBACPP,EAAAC,EAAAC,cAAA,OAAKC,UAAS,sCAAAoC,OAAwC3D,KAAKK,MAAMsB,gBAAgB+B,MAAnE,KAAAC,OAA4EpD,EAAQ,eAAe,KAE7Ga,EAAAC,EAAAC,cAAA,OAAKC,UAAW,UAAWvB,KAAKK,MAAMsB,gBAAgBd,QACtDO,EAAAC,EAAAC,cAAA,OAAKC,UAAW,UAAWvB,KAAKK,MAAMsB,gBAAgBiC,QACrDrD,EACGa,EAAAC,EAAAC,cAAA,OAAKC,UAAW,QAAhB,MAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,QAASvB,KAAKK,MAAMsB,gBAAgBQ,MAExDf,EAAAC,EAAAC,cAAA,UAAQuC,QAAS7D,KAAK+C,sCAAuCxB,UAAU,SAG3E,KAIJvB,KAAKK,MAAMsC,gCACRvB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAW,UAAWsC,QAAS7D,KAAK+C,wCACxC3B,EAAAC,EAAAC,cAAA,OAAKC,UAAW,uCACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,OAEZH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,0BAAAoC,OAA4B3D,KAAKK,MAAMsB,gBAAgB+B,MAAvD,MACVtC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,gBACfhB,EACGP,KAAKwC,YAELxC,KAAKK,MAAMsB,gBAAgBQ,MAK/Bf,EAAAC,EAAAC,cAAA,OAAKC,UAAW,iBACXvB,KAAKK,MAAMuC,2BAKpBxB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YAG8B,OAAtCvB,KAAKK,MAAMsB,gBAAgBd,QAC3Bb,KAAKiB,KAAK,gBAAiBjB,KAAKK,MAAMsB,gBAAgBd,QAItDb,KAAKK,MAAMsB,gBAAgBiC,QAC3B5D,KAAKiB,KAAK,SAAUjB,KAAKK,MAAMsB,gBAAgBiC,QAI/C5D,KAAKK,MAAMsB,gBAAgBmC,YAC3B9D,KAAKiB,KAAK,OAAQjB,KAAKK,MAAMsB,gBAAgBmC,YAI7C9D,KAAKK,MAAMsB,gBAAgBoC,yBAC3B/D,KAAKiB,KAAK,mBAAoBjB,KAAKK,MAAMsB,gBAAgBoC,yBAIzD/D,KAAKK,MAAMsB,gBAAgBqC,mBAC3BhE,KAAKiB,KAAK,oBAAqBjB,KAAKK,MAAMsB,gBAAgBqC,mBAI1DhE,KAAKK,MAAMsB,gBAAgBsC,cAC3BjE,KAAKiB,KAAK,gBAAiBjB,KAAKK,MAAMsB,gBAAgBsC,cAItDjE,KAAKK,MAAMsB,gBAAgBuC,WAC3BlE,KAAKiB,KAAK,eAAV,GAAA0C,OAA6B3D,KAAKK,MAAMsB,gBAAgBuC,UAAxD,QAIiD,OAAjDlE,KAAKK,MAAMsB,gBAAgBwC,mBAC3BnE,KAAKiB,KAAK,uBAAV,GAAA0C,OAAqC3D,KAAKK,MAAMsB,gBAAgBwC,kBAAhE,QAIAnE,KAAKK,MAAMsB,gBAAgByC,kBAC3BpE,KAAKiB,KAAK,gBAAV,GAAA0C,OAA8B3D,KAAKK,MAAMsB,gBAAgByC,iBAAzD,SAIgD,OAAhDpE,KAAKK,MAAMsB,gBAAgB0C,kBAC3BrE,KAAKiB,KAAK,sBAAuBjB,KAAKK,MAAMsB,gBAAgB0C,kBAI5DrE,KAAKK,MAAMsB,gBAAgB2C,iBAC3BtE,KAAKiB,KAAK,kBAAmBjB,KAAKK,MAAMsB,gBAAgB2C,qBAS5E,aAjOMC,cC4DfC,6MA1DXC,YAAc,kBACVrD,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aAIpBmD,WAAa,kBACTtD,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YAIpB3B,gBAAkB,WACd,OACIwB,EAAAC,EAAAC,cAACqD,EAAD,CACI5D,aAAgBlB,EAAKiB,MAAM8D,yBAC3BnD,iBAAoB5B,EAAKiB,MAAMW,iBAC/BY,uBAA0BxC,EAAKiB,MAAMuB,kGAM7C,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,WAERvB,KAAKc,MAAM8D,yBAA2B,EAClC5E,KAAKJ,kBAEL,KAIoC,IAAxCI,KAAKc,MAAM8D,yBACP5E,KAAKyE,cAEL,KAIJzE,KAAKc,MAAM8D,yBAA2B,EAClC5E,KAAK0E,aAEL,aA3CHH,aCqHNM,cArHX,SAAAA,IAAc,IAAAhF,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6E,IACVhF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+E,GAAA1E,KAAAH,QAUJqC,uBAAyB,SAACyC,GACtB,IACMC,EADOlF,EAAKQ,MAAMoB,iBACHuD,OAAO,SAAA7B,GAAK,OAAIA,GAAS2B,IAC9CjF,EAAKoF,oBAAoBF,IAdflF,EAiBdqF,6BAA8B,WAC1BrF,EAAKS,SAAS,CACV6E,2BAA2B,KAnBrBtF,EAuBduF,cAAgB,WAEZ,IADA,IAAIC,EAAM,GACJA,EAAI5B,OAAS,GAAE,CACjB,IAAI6B,EAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,GACnB,IAApBJ,EAAI3D,QAAQ4D,IAAWD,EAAIK,KAAKJ,GAEvCzF,EAAKoF,oBAAoBI,IA7BfxF,EA0Cd8F,cAAgB,SAACC,EAAUC,GACvB,OACIzE,EAAAC,EAAAC,cAAA,OAAKC,UAAS,mBAAAoC,OAAuBiC,IAChCC,IA7CChG,EAkDdiG,gBAAkB,WACd,IAAMC,EAAkBlG,EAAKmG,aAAa,GAAGvC,OAAO,EAC9CwC,EAAkBC,MAAMC,MAAM,KAAM,CAAC1C,OAAQsC,IAAkBK,IAAIC,OAAOlG,KAAMkG,QACtF,OACIjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEX0E,EAAgBG,IAAI,SAACE,EAAQV,GACzB,OAAiB,IAAbA,GAA+B,KAAbA,EACX/F,EAAK8F,cAAc,SAAS,MAG5B9F,EAAK8F,cAAc,iBAAiBC,OA7DjD/F,EAqEd0G,WAAa,WAET,OAAO1G,EAAKmG,aAAaI,IAAI,SAACI,EAAWZ,GAErC,IAAIa,OAAMnE,EAKV,OAHImE,EADAb,GAAY,EACNA,EAAS,EAET,KAENxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACV1B,EAAK8F,cAAc,cAAcc,GACjCD,EAAUJ,IAAI,SAACM,GACZ,OACItF,EAAAC,EAAAC,cAACqF,EAAD,CACI/B,yBAA4B8B,EAC5BjF,iBAAmB5B,EAAKQ,MAAMoB,iBAC9BY,uBAA0BxC,EAAKwC,2BAI1CxC,EAAK8F,cAAc,cAAcc,OAxF9C5G,EAAKQ,MAAQ,CACToB,sBAAkBa,EAClB6C,2BAA2B,GAE/BtF,EAAKmG,aAAe/C,EAAQ,IAC5BpD,EAAK4B,iBAAkB5B,EAAKoF,oBAAoBpC,KAAzB/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KACvBA,EAAKsF,0BAA2BtF,EAAKqF,6BAA6BrC,KAAlC/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KARtBA,mFAgCMwF,GAEhBrF,KAAKM,SAAS,CACVmB,iBAAkB4D,IAEjBrF,KAAKK,MAAM8E,2BACZnF,KAAKkF,gEAkET,OAJ4C,IAAzClF,KAAKK,MAAM8E,2BACVnF,KAAKoF,gBAILhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACdvB,KAAK8F,kBACL9F,KAAKuG,sBA7GDhC,aCSNqC,0LARP,OACIxF,EAAAC,EAAAC,cAAA,OAAKC,UAAW,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAW,SAAf,0BAJQgD,cC2FTsC,qBApFX,SAAAA,IAAc,IAAAhH,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6G,IACVhH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+G,GAAA1G,KAAAH,QAcJ8G,kBAAoB,WAChB,GAAIjH,EAAKQ,MAAM0G,sBAEf,OACI3F,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAW,UAAWsC,QAAShE,EAAKmH,8BACzC5F,EAAAC,EAAAC,cAAA,OAAKC,UAAW,uCACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,OAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,wBAAhB,cAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,wCAAhB,IAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,gBACX,SAGLH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,iBACX,YAGLH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,iBACX,gBAMTH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YAERH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,qDAAhB,uCAKAH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,uDAAhB,mBAKAH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,6DAAhB,6BArDxB1B,EAAKQ,MAAQ,CACT0G,uBAAuB,GAG1BlH,EAAKmH,4BAA8BnH,EAAKmH,4BAA4BnE,KAAjC/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KAN1BA,6FAUVG,KAAKM,SAAS,CACVyG,uBAAyB/G,KAAKK,MAAM0G,yDA4DxC,OACI3F,EAAAC,EAAAC,cAAA,WACKtB,KAAK8G,oBACV1F,EAAAC,EAAAC,cAAA,OAAKC,UAAW,UACZH,EAAAC,EAAAC,cAAA,OAAKwD,GAAG,oBAAoBjB,QAAS7D,KAAKgH,6BACtC5F,EAAAC,EAAAC,cAAA,MAAIC,UAAW,SAAU,2BA9ExBgD,cCYN0C,mLAZX,OACE7F,EAAAC,EAAAC,cAAA,OAAKC,UAAW,OACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,eACdH,EAAAC,EAAAC,cAAC4F,EAAD,MACA9F,EAAAC,EAAAC,cAAC6F,EAAD,MACA/F,EAAAC,EAAAC,cAAC8F,EAAD,eAPQ7C,aCKE8C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOvG,EAAAC,EAAAC,cAACsG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.49fa6625.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { PropTypes } from \"prop-types\";\r\nimport './../css/index.css'\r\nimport './../css/colorsOfTheElements.css'\r\nimport './../css/chemicalElement.css'\r\n\r\nclass ChemicalElement extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            chemicalElement : undefined,\r\n            modalChemicalElementInformation : false, \r\n            chemicalElementGroupName : undefined,\r\n            shake : undefined,\r\n            nameValue : undefined\r\n        }\r\n\r\n        this.setChemicalElement = this.setChemicalElement.bind(this);\r\n        this.toggleModalChemicalElementInformation = this.toggleModalChemicalElementInformation.bind(this);\r\n        this.prettyGroupName = this.prettyGroupName.bind(this);\r\n        this.chemicalElements = require('./../Data/chemicalElements');\r\n        this.shake = this.setShake.bind(this);\r\n        this.nameValue = this.handleTextChange.bind(this);\r\n    }\r\n\r\n    setShake = (state) => {\r\n        this.setState({\r\n            shake: state\r\n        });\r\n    }\r\n\r\n    prettyGroupName(groupName){\r\n        groupName =  groupName.charAt(0).toUpperCase() + groupName.slice(1)\r\n        var index\r\n        var indicator = true\r\n        while(indicator){\r\n            index = groupName.indexOf('_')\r\n            if (index === -1)\r\n                indicator = false;\r\n            else{\r\n                groupName  = groupName.substr(0,index)+' '+ groupName.substr(index+1, groupName.length-1)\r\n            }  \r\n        }\r\n        //console.log(groupName)\r\n        this.setState({\r\n            chemicalElementGroupName: groupName\r\n        });\r\n    }\r\n\r\n    toggleModalChemicalElementInformation(){\r\n        this.prettyGroupName(this.state.chemicalElement.group)\r\n        this.setState({\r\n            modalChemicalElementInformation: !this.state.modalChemicalElementInformation\r\n        });\r\n    }\r\n\r\n    setChemicalElement(element){\r\n        this.setState({\r\n            chemicalElement: element\r\n        });\r\n    }\r\n    \r\n    componentDidMount = () =>{\r\n        const element = this.chemicalElements.find(item => item.atomic === this.props.atomicNumber)\r\n        this.setChemicalElement(element)\r\n    }\r\n\r\n    info = (title, description) => {\r\n        return(\r\n            <div className={'box-body-information'}>\r\n                <div className={'box-body-information-key'}>\r\n                    {title}\r\n                </div>\r\n                <div className={'box-body-information-value'}>\r\n                    {description} \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    checkShake = () => {\r\n        let shake = null\r\n        if (this.props.selectedElements){\r\n            \r\n            shake = this.props.selectedElements.indexOf(this.state.chemicalElement.atomic) === -1 ? false : \"shake\" ;\r\n            \r\n            if (shake){\r\n                this.setShake(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    textChange = (event) => {\r\n        \r\n        this.handleTextChange(event.target.value)\r\n\r\n        console.log(\"name \",this.state.chemicalElement.name)\r\n\r\n        if(this.state.chemicalElement.name.toLowerCase() == event.target.value.toLowerCase()){\r\n            console.log(\"equals\")\r\n            this.props.updateSelectedElements(this.state.chemicalElement.atomic)\r\n            this.setShake(undefined);\r\n        }\r\n        \r\n    }\r\n\r\n    handleTextChange = (value) => {\r\n        this.setState({nameValue: value});\r\n    }\r\n\r\n    inputText = () => {\r\n        return(\r\n            <textarea placeholder= {\"??\"} value={this.state.nameValue} onChange={this.textChange} />\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        const { shake } = this.state;\r\n\r\n        if(!this.state.shake){\r\n            this.checkShake()\r\n        }\r\n\r\n        return(\r\n            <div className = {'chemicalElement'}> \r\n                {\r\n                    this.state.chemicalElement !== undefined ?\r\n                        <div className={`periodic-table-element information ${this.state.chemicalElement.group} ${shake ? \"shakeElement\":\"\"}`} >\r\n                            {/*console.log(this.state.chemicalElement)*/}\r\n                            <div className={'atomic'}>{this.state.chemicalElement.atomic}</div>\r\n                            <div className={'symbol'}>{this.state.chemicalElement.symbol}</div>\r\n                            {shake?\r\n                                <div className={'name'}>??</div>\r\n                            :\r\n                                <div className={'name'}>{this.state.chemicalElement.name}</div>\r\n                            }             \r\n                            <canvas onClick={this.toggleModalChemicalElementInformation} className=\"ink\"></canvas>\r\n                        </div>\r\n                    :\r\n                        null\r\n                }\r\n\r\n                {\r\n                    this.state.modalChemicalElementInformation ?\r\n                       <div>\r\n                           <div className={'overlay'} onClick={this.toggleModalChemicalElementInformation}></div>\r\n                            <div className={'styleElementModal modal modal-page '}> \r\n                                <div className={'box'}>\r\n\r\n                                    <div className={`box-header information ${this.state.chemicalElement.group} `}>\r\n                                        <div className={'element-name'}>\r\n                                        {shake?\r\n                                            this.inputText()\r\n                                        :\r\n                                            this.state.chemicalElement.name\r\n                                        } \r\n                                            \r\n                                        </div>\r\n\r\n                                        <div className={'element-group'}>\r\n                                            {this.state.chemicalElementGroupName}\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={'box-body'}>\r\n\r\n                                        {\r\n                                            this.state.chemicalElement.atomic !== null && \r\n                                            this.info(\"Atomic Number\", this.state.chemicalElement.atomic) \r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.symbol &&\r\n                                            this.info(\"Symbol\", this.state.chemicalElement.symbol)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.atomicMass &&\r\n                                            this.info(\"Mass\", this.state.chemicalElement.atomicMass)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.electronicConfiguration &&\r\n                                            this.info(\"Electronic Conf.\", this.state.chemicalElement.electronicConfiguration)\r\n                                        }\r\n\r\n                                        {\r\n                                            this.state.chemicalElement.electronegativity &&\r\n                                            this.info(\"Electronegativity\", this.state.chemicalElement.electronegativity)\r\n                                        }\r\n\r\n                                        {\r\n                                            this.state.chemicalElement.atomicRadius &&\r\n                                            this.info(\"Atomic Radius\", this.state.chemicalElement.atomicRadius)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.ionRadius &&\r\n                                            this.info(\"Ionic Radius\", `${this.state.chemicalElement.ionRadius} pm`)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.vanDelWaalsRadius !== null &&\r\n                                            this.info(\"Van der Waals Radius\", `${this.state.chemicalElement.vanDelWaalsRadius} pm`)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.ionizationEnergy &&\r\n                                            this.info(\"Ionic Energic\", `${this.state.chemicalElement.ionizationEnergy} mol`)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.electronAffinity !== null &&\r\n                                            this.info(\"Electronic affinity\", this.state.chemicalElement.electronAffinity)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.state.chemicalElement.oxidationStates &&\r\n                                            this.info(\"Oxidation state\", this.state.chemicalElement.oxidationStates)\r\n                                        }\r\n                                        \r\n                                    </div>\r\n                                \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    :\r\n                        null\r\n                }\r\n                \r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nChemicalElement.propTypes = {\r\n\r\n    atomicNumber : PropTypes.number.isRequired\r\n        \r\n}\r\n\r\nexport default ChemicalElement;","import React, {Component} from 'react';\r\nimport { PropTypes } from \"prop-types\";\r\nimport ChemicalElement from './../Components/ChemicalElement'\r\nimport './../css/index.css'\r\n\r\n\r\nclass Square extends Component {\r\n\r\n    emptySquare = () => (\r\n        <div className={'Empty'}>\r\n        </div>\r\n    )\r\n\r\n    tinySquare = () => (\r\n        <div className={'Tiny'}>\r\n        </div>\r\n    )\r\n\r\n    ChemicalElement = () => {\r\n        return(\r\n            <ChemicalElement\r\n                atomicNumber = {this.props.positionOfSquareInFormat}\r\n                selectedElements = {this.props.selectedElements}\r\n                updateSelectedElements = {this.props.updateSelectedElements}\r\n            />\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={'Square '} >\r\n                {\r\n                    this.props.positionOfSquareInFormat > 0 ?\r\n                        this.ChemicalElement()\r\n                    :\r\n                        null\r\n                }\r\n\r\n                {\r\n                    this.props.positionOfSquareInFormat === 0 ?\r\n                        this.emptySquare()\r\n                    :\r\n                        null\r\n                }\r\n\r\n                {\r\n                    this.props.positionOfSquareInFormat < 0 ?\r\n                        this.tinySquare()\r\n                    :\r\n                        null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    \r\n    \r\n}\r\n\r\nSquare.propTypes = {\r\n\r\n    positionOfSquareInFormat : PropTypes.number.isRequired\r\n        \r\n}\r\n\r\nexport default Square;","import React, {Component} from 'react';\r\nimport Square from './../Components/Square'\r\nimport './../css/index.css'\r\n\r\n\r\nclass Matrix extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            selectedElements: undefined, \r\n            generatedSelectedElements: false\r\n        }\r\n        this.matrixFormat = require('./../Data/format.json');\r\n        this.selectedElements= this.setSelectedElements.bind(this);\r\n        this.generatedSelectedElements= this.setGeneratedSelectedElements.bind(this);\r\n    }\r\n\r\n    updateSelectedElements = (id) => {\r\n        const list = this.state.selectedElements; \r\n        const newList = list.filter(index => index != id)\r\n        this.setSelectedElements(newList);\r\n    }\r\n\r\n    setGeneratedSelectedElements= () => {\r\n        this.setState({\r\n            generatedSelectedElements: true\r\n        });\r\n    }\r\n\r\n    generatedList = () => {\r\n        var arr = [];\r\n        while(arr.length < 3){\r\n            var r = Math.floor(Math.random() * 118) + 1;\r\n            if(arr.indexOf(r) === -1) arr.push(r);\r\n        }\r\n        this.setSelectedElements(arr);\r\n    }\r\n\r\n    setSelectedElements(arr){\r\n        \r\n        this.setState({\r\n            selectedElements: arr\r\n        });\r\n        if (!this.state.generatedSelectedElements){\r\n            this.setGeneratedSelectedElements();\r\n        }\r\n    }\r\n\r\n    frameOfMatrix = (position, contend) => {\r\n        return(\r\n            <div className = {`row matrixFrame ${position}`}>\r\n                {contend}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    numberOfColumns = () => {\r\n        const columnsQuantity = this.matrixFormat[0].length+2 // (vertex)\r\n        const listOfColumnsId = Array.apply(null, {length: columnsQuantity}).map(Number.call, Number)\r\n        return(\r\n            <div className='row'>\r\n            {\r\n                listOfColumnsId.map((column, position)=>{\r\n                    if (position === 0 || position === 19 ){\r\n                        return this.frameOfMatrix('vertex',null)\r\n                    }\r\n                    else{\r\n                        return this.frameOfMatrix('numberOfColumn',position)\r\n                    }\r\n                })\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    matrixRows = () => {\r\n\r\n        return this.matrixFormat.map((rowFormat, position)=>{\r\n\r\n            var pos = undefined\r\n            if (position <= 6)\r\n                pos = position+1\r\n            else  \r\n                pos = null\r\n            return(\r\n                <div className=\"row\">\r\n                    {this.frameOfMatrix('numberOfRow',pos)}\r\n                    {rowFormat.map((cellIndex)=>{\r\n                        return(\r\n                            <Square\r\n                                positionOfSquareInFormat = {cellIndex}\r\n                                selectedElements= {this.state.selectedElements}\r\n                                updateSelectedElements = {this.updateSelectedElements}\r\n                            />\r\n                        )\r\n                    })}\r\n                    {this.frameOfMatrix('numberOfRow',pos)}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        \r\n        if(this.state.generatedSelectedElements === false){\r\n            this.generatedList()\r\n        }\r\n\r\n        return(\r\n            <div className=\"periodic-table\">\r\n                <div className=\"table\">\r\n                {this.numberOfColumns()}\r\n                {this.matrixRows()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default Matrix;","import React, {Component} from 'react';\r\nimport './../css/appHeader.css';\r\nimport './../css/index.css';\r\n\r\nclass AppHeader extends Component{\r\n    render(){\r\n        return(\r\n            <div className={'app-header'}>\r\n                <h1 className={'title'}>Periodic Table</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppHeader;","import React, {Component} from 'react';\r\nimport './../css/footer.css';\r\nimport './../css/index.css';\r\n\r\nimport './../css/index.css'\r\nimport './../css/colorsOfTheElements.css'\r\nimport './../css/chemicalElement.css'\r\n\r\n\r\nclass Footer extends Component{\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { \r\n            showDedicationMessage: false\r\n         };\r\n\r\n         this.toggleShowDedicationMessage = this.toggleShowDedicationMessage.bind(this);\r\n    }\r\n\r\n    toggleShowDedicationMessage() {\r\n        this.setState({\r\n            showDedicationMessage : !this.state.showDedicationMessage\r\n        });\r\n    }\r\n\r\n    dedicationMessage = () => {\r\n        if (this.state.showDedicationMessage){\r\n\r\n        return(\r\n            <div>\r\n                <div className={'overlay'} onClick={this.toggleShowDedicationMessage}></div>\r\n                <div className={'styleElementModal modal modal-page '}> \r\n                    <div className={'box'}>\r\n                            {\r\n                                <div className={'box-body-information'}>\r\n                                Created by:\r\n                                <div className={'box-header information alkali_metals'}> {/*  ${this.state.chemicalElement.group} */}\r\n                        \r\n                            <div className={'element-name'}>\r\n                                {'Mauro'}\r\n                            </div>\r\n\r\n                            <div className={'element-group'}>\r\n                                {'López'}\r\n                            </div>\r\n\r\n                            <div className={'element-group'}>\r\n                                {'Jiménez'}\r\n                            </div>\r\n                        </div>\r\n                                </div>  \r\n                            }\r\n\r\n                        <div className={'box-body'}>\r\n                            {\r\n                                <div className={'box-body-information-footer information amphigens'}>\r\n                                Mail: lopezjimenezmauro05@gmail.com\r\n                                </div>  \r\n                            }\r\n                            {\r\n                                <div className={'box-body-information-footer information noble_gases'}>\r\n                                Github: MLopezJ\r\n                                </div>  \r\n                            }\r\n                            {\r\n                                <div className={'box-body-information-footer information transition_metals'}>\r\n                                Twitter: MauroLopezJ\r\n                                </div>  \r\n                            }\r\n                            \r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div>\r\n                {this.dedicationMessage()}\r\n            <div className={'footer'}>\r\n                <div id=\"authorDescription\" onClick={this.toggleShowDedicationMessage}>\r\n                    <h1 className={'title'}>{'<MauroLopez/>'}</h1>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport Matrix from './Components/Matrix';\r\nimport AppHeader from './Components/AppHeader';\r\nimport Footer from './Components/Footer';\r\n//import './App.css';\r\nimport './css/index.css'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className={'app'}>\r\n        <div className={'app-content'}>\r\n          <AppHeader/>\r\n          <Matrix/>\r\n          <Footer/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}