{"version":3,"sources":["Components/ChemicalElement.js","Components/Square.js","Components/Matrix.js","Components/AppHeader.js","Components/Footer.js","Components/Instructions.js","App.js","serviceWorker.js","index.js"],"names":["ChemicalElement","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setInputShadow","state","setState","inputShadow","setShake","shake","info","title","description","react_default","a","createElement","className","checkShake","props","selectedElements","indexOf","element","atomic","similarity","s1","s2","longer","shorter","length","longerLength","editDistance","parseFloat","costs","Array","i","lastValue","j","newValue","charAt","Math","min","textChange","event","handleTextChange","target","value","eventValue","toLowerCase","normalize","replace","stateValue","name","console","log","undefined","updateSelectedElements","nameValue","inputText","concat","placeholder","onChange","modalChemicalElementInformation","toggleModalChemicalElementInformation","bind","assertThisInitialized","cssStyle","symbol","onClick","chemicalElementGroupName","atomicMass","electronicConfiguration","electronegativity","atomicRadius","ionRadius","vanDelWaalsRadius","ionizationEnergy","electronAffinity","oxidationStates","Component","Square","emptySquare","tinySquare","getElement","assign","chemicalElements","find","item","positionOfSquareInFormat","lenguage","elementSpanish","chemicalElementsSpanish","group","prettyGroupName","Components_ChemicalElement","chemicalElement","require","groupName","index","toUpperCase","slice","indicator","substr","Matrix","id","newList","filter","setSelectedElements","setGeneratedSelectedElements","generatedSelectedElements","generatedList","arr","r","floor","random","push","frameOfMatrix","position","contend","numberOfColumns","columnsQuantity","matrixFormat","listOfColumnsId","apply","map","Number","column","matrixRows","rowFormat","pos","cellIndex","Components_Square","AppHeader","setTitle","text","elements","toggleLanguage","language","setLanguage","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","Footer","setShowSettings","Modal","returnElement","elementTitle","changeLanguage","howToPlay","chooseLanguage","aboutTheAuthor","exit","back","instructionHowToPlay1","instructionHowToPlay2","instructionHowToPlay3","language1","language2","author1","author2","modalTitle","modalTittle","handleLenguageChange","changeEvent","toggleLenguage","settings","toggleShowHowToPlay","toggleShowChooseLenguage","toggleShowAboutTheAuthor","type","checked","for","modal","showHowtoPlay","showAboutTheAuthor","showChooseLenguage","showInstructions","howToPlay1","howToPlay2","howToPlay3","toggleShowInstructions","toggleModalTittle","showSettings","App","toggleText","textSpanish","textEnglish","Components_AppHeader","appHeader","Components_Matrix","Components_Footer","footer","Instructions","instructions","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7bb3931f.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { PropTypes } from \"prop-types\";\r\nimport './../css/index.css'\r\nimport './../css/colorsOfTheElements.css'\r\nimport './../css/chemicalElement.css'\r\n\r\nclass ChemicalElement extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            modalChemicalElementInformation : false, \r\n            shake : undefined,\r\n            nameValue : undefined, \r\n            inputShadow : undefined\r\n        }\r\n\r\n        \r\n        this.toggleModalChemicalElementInformation = this.toggleModalChemicalElementInformation.bind(this);\r\n        this.shake = this.setShake.bind(this);\r\n        this.nameValue = this.handleTextChange.bind(this);\r\n        this.inputShadow = this.setInputShadow.bind(this);\r\n    }\r\n\r\n    \r\n\r\n    setInputShadow = (state) => {\r\n        this.setState({\r\n            inputShadow: state\r\n        });\r\n    }\r\n\r\n    setShake = (state) => {\r\n        this.setState({\r\n            shake: state\r\n        });\r\n    }\r\n\r\n    toggleModalChemicalElementInformation(){\r\n        this.setState({\r\n            modalChemicalElementInformation: !this.state.modalChemicalElementInformation\r\n        });\r\n    }\r\n\r\n\r\n    info = (title, description) => {\r\n        return(\r\n            <div className={'box-body-information'}>\r\n                <div className={'box-body-information-key'}>\r\n                    {title}\r\n                </div>\r\n                <div className={'box-body-information-value'}>\r\n                    {description} \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    checkShake = () => {\r\n        let shake = null\r\n        if (this.props.selectedElements){\r\n            \r\n            shake = this.props.selectedElements.indexOf(this.props.element.atomic) === -1 ? false : \"shake\" ;\r\n            \r\n            if (shake){\r\n                this.setShake(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    similarity = (s1, s2) => {\r\n        var longer = s1;\r\n        var shorter = s2;\r\n        if (s1.length < s2.length) {\r\n          longer = s2;\r\n          shorter = s1;\r\n        }\r\n        var longerLength = longer.length;\r\n        if (longerLength == 0) {\r\n          return 1.0;\r\n        }\r\n        return ((longerLength - this.editDistance(longer, shorter)) / parseFloat(longerLength)*100);\r\n    }\r\n\r\n    editDistance = (s1, s2) => {\r\n        //s1 = s1.toLowerCase();\r\n        //s2 = s2.toLowerCase();\r\n\r\n        var costs = new Array();\r\n        for (var i = 0; i <= s1.length; i++) {\r\n          var lastValue = i;\r\n          for (var j = 0; j <= s2.length; j++) {\r\n            if (i == 0)\r\n              costs[j] = j;\r\n            else {\r\n              if (j > 0) {\r\n                var newValue = costs[j - 1];\r\n                if (s1.charAt(i - 1) != s2.charAt(j - 1))\r\n                  newValue = Math.min(Math.min(newValue, lastValue),\r\n                    costs[j]) + 1;\r\n                costs[j - 1] = lastValue;\r\n                lastValue = newValue;\r\n              }\r\n            }\r\n          }\r\n          if (i > 0)\r\n            costs[s2.length] = lastValue;\r\n        }\r\n        return costs[s2.length];\r\n      }\r\n\r\n    textChange = (event) => {\r\n        \r\n        this.handleTextChange(event.target.value)\r\n\r\n        const eventValue = event.target.value.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n        const stateValue = this.props.element.name.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n\r\n        console.log(\"name \",this.props.element.name)\r\n\r\n        var similarity = this.similarity(stateValue,eventValue)\r\n        \r\n        if (event.target.value.length === 0){\r\n            this.setInputShadow(undefined)\r\n        }\r\n\r\n        if(similarity >= 0 && similarity < 30  && event.target.value.length > 1){\r\n            this.setInputShadow(\"inputShadowRed\")\r\n        }\r\n\r\n        if(similarity >= 30 && similarity < 70 ){\r\n            this.setInputShadow(\"inputShadowOrange\")\r\n        }\r\n\r\n        if(similarity >= 70 && similarity < 100 ){\r\n            this.setInputShadow(\"inputShadowGreen\")\r\n        }\r\n\r\n        if(stateValue == eventValue){\r\n            console.log(\"equals\")\r\n            this.props.updateSelectedElements(this.props.element.atomic)\r\n            this.setShake(undefined);\r\n        }\r\n        \r\n    }\r\n\r\n    handleTextChange = (value) => {\r\n        this.setState({nameValue: value});\r\n    }\r\n\r\n    inputText = () => {\r\n        \r\n        return(\r\n            <input className={`${this.state.inputShadow}`} placeholder= {\"??\"} value={this.state.nameValue} onChange={this.textChange} />\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        \r\n        const { shake } = this.state;\r\n\r\n        if(!this.state.shake){\r\n            this.checkShake()\r\n        }\r\n\r\n        return(\r\n            <div className = {'chemicalElement'}> \r\n                {\r\n                    this.props.element !== undefined ?\r\n                        <div className={`periodic-table-element information ${this.props.element.cssStyle} ${shake ? \"shakeElement\":\"\"}`} >\r\n                            {/*console.log(this.this.props.element)*/}\r\n                            <div className={'atomic'}>{this.props.element.atomic}</div>\r\n                            <div className={'symbol'}>{this.props.element.symbol}</div>\r\n                            {shake?\r\n                                <div className={'name'}>??</div>\r\n                            :\r\n                                <div className={'name'}>{this.props.element.name}</div>\r\n                            }             \r\n                            <canvas onClick={this.toggleModalChemicalElementInformation} className=\"ink\"></canvas>\r\n                        </div>\r\n                    :\r\n                        null\r\n                }\r\n\r\n                {\r\n                    this.state.modalChemicalElementInformation ?\r\n                       <div>\r\n                           <div className={'overlay'} onClick={this.toggleModalChemicalElementInformation}></div>\r\n                            <div className={'styleElementModal modal modal-page '}> \r\n                                <div className={'box'}>\r\n\r\n                                    <div className={`box-header information ${this.props.element.cssStyle} `}>\r\n                                        <div className={'element-name'}>\r\n                                        {shake?\r\n                                            this.inputText()\r\n                                        :\r\n                                            this.props.element.name\r\n                                        } \r\n                                            \r\n                                        </div>\r\n\r\n                                        <div className={'element-group'}>\r\n                                            {this.props.chemicalElementGroupName}\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={'box-body'}>\r\n\r\n                                        {\r\n                                            this.props.element.atomic !== null && \r\n                                            this.info(\"Atomic Number\", this.props.element.atomic) \r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.symbol &&\r\n                                            this.info(\"Symbol\", this.props.element.symbol)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.atomicMass &&\r\n                                            this.info(\"Mass\", this.props.element.atomicMass)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.electronicConfiguration &&\r\n                                            this.info(\"Electronic Conf.\", this.props.element.electronicConfiguration)\r\n                                        }\r\n\r\n                                        {\r\n                                            this.props.element.electronegativity &&\r\n                                            this.info(\"Electronegativity\", this.props.element.electronegativity)\r\n                                        }\r\n\r\n                                        {\r\n                                            this.props.element.atomicRadius &&\r\n                                            this.info(\"Atomic Radius\", this.props.element.atomicRadius)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.ionRadius &&\r\n                                            this.info(\"Ionic Radius\", `${this.props.element.ionRadius} pm`)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.vanDelWaalsRadius !== null &&\r\n                                            this.info(\"Van der Waals Radius\", `${this.props.element.vanDelWaalsRadius} pm`)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.ionizationEnergy &&\r\n                                            this.info(\"Ionic Energic\", `${this.props.element.ionizationEnergy} mol`)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.electronAffinity !== null &&\r\n                                            this.info(\"Electronic affinity\", this.props.element.electronAffinity)\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            this.props.element.oxidationStates &&\r\n                                            this.info(\"Oxidation state\", this.props.element.oxidationStates)\r\n                                        }\r\n                                        \r\n                                    </div>\r\n                                \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    :\r\n                        null\r\n                }\r\n                \r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nChemicalElement.propTypes = {\r\n\r\n    atomicNumber : PropTypes.number.isRequired\r\n        \r\n}\r\n\r\nexport default ChemicalElement;","import React, {Component} from 'react';\r\nimport { PropTypes } from \"prop-types\";\r\nimport ChemicalElement from './../Components/ChemicalElement'\r\nimport './../css/index.css'\r\n\r\n\r\nclass Square extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            chemicalElement : undefined,\r\n            modalChemicalElementInformation : false, \r\n            chemicalElementGroupName : undefined,\r\n            shake : undefined,\r\n            nameValue : undefined, \r\n            inputShadow : undefined,\r\n            chemicalElementsSpanish : undefined,\r\n            lenguage : undefined\r\n        }\r\n\r\n        this.chemicalElements = require('./../Data/chemicalElements');\r\n        this.chemicalElementsSpanish = require('./../Data/chemicalElementsSpanish');\r\n    }\r\n\r\n    emptySquare = () => (\r\n        <div className={'Empty'}>\r\n        </div>\r\n    )\r\n\r\n    tinySquare = () => (\r\n        <div className={'Tiny'}>\r\n        </div>\r\n    )\r\n\r\n    getElement = () => {\r\n        let element = Object.assign(\r\n            {},\r\n            this.chemicalElements.find(\r\n                item => item.atomic === this.props.positionOfSquareInFormat\r\n            )\r\n        )\r\n        \r\n        if (this.props.lenguage === \"Spanish\"){\r\n            const elementSpanish = this.chemicalElementsSpanish.find(item => item.atomic === this.props.positionOfSquareInFormat)\r\n            element.name = elementSpanish.name;\r\n            element.group = elementSpanish.group;\r\n        }\r\n\r\n        return element\r\n\r\n    }\r\n\r\n    prettyGroupName(groupName){\r\n        groupName =  groupName.charAt(0).toUpperCase() + groupName.slice(1)\r\n        var index\r\n        var indicator = true\r\n        while(indicator){\r\n            index = groupName.indexOf('_')\r\n            if (index === -1)\r\n                indicator = false;\r\n            else{\r\n                groupName  = groupName.substr(0,index)+' '+ groupName.substr(index+1, groupName.length-1)\r\n            }  \r\n        }\r\n        \r\n        return groupName\r\n    }\r\n\r\n    ChemicalElement = () => {\r\n        const element = this.getElement();\r\n        const chemicalElementGroupName = this.prettyGroupName(element.group);\r\n        \r\n        return(\r\n            <ChemicalElement\r\n                element = {element}\r\n                chemicalElementGroupName = {chemicalElementGroupName}\r\n                selectedElements = {this.props.selectedElements}\r\n                updateSelectedElements = {this.props.updateSelectedElements}\r\n                lenguage = {this.props.lenguage}\r\n            />\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={'Square '} >\r\n                {\r\n                    this.props.positionOfSquareInFormat > 0 ?\r\n                        this.ChemicalElement()\r\n                    :\r\n                        null\r\n                }\r\n\r\n                {\r\n                    this.props.positionOfSquareInFormat === 0 ?\r\n                        this.emptySquare()\r\n                    :\r\n                        null\r\n                }\r\n\r\n                {\r\n                    this.props.positionOfSquareInFormat < 0 ?\r\n                        this.tinySquare()\r\n                    :\r\n                        null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    \r\n    \r\n}\r\n\r\nSquare.propTypes = {\r\n\r\n    positionOfSquareInFormat : PropTypes.number.isRequired\r\n        \r\n}\r\n\r\nexport default Square;","import React, {Component} from 'react';\r\nimport Square from './../Components/Square'\r\nimport './../css/index.css'\r\n\r\n\r\nclass Matrix extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            selectedElements: undefined, \r\n            generatedSelectedElements: false\r\n        }\r\n        this.matrixFormat = require('./../Data/format.json');\r\n        this.selectedElements= this.setSelectedElements.bind(this);\r\n        this.generatedSelectedElements= this.setGeneratedSelectedElements.bind(this);\r\n    }\r\n\r\n    updateSelectedElements = (id) => {\r\n        const list = this.state.selectedElements; \r\n        const newList = list.filter(index => index != id)\r\n        this.setSelectedElements(newList);\r\n    }\r\n\r\n    setGeneratedSelectedElements= () => {\r\n        this.setState({\r\n            generatedSelectedElements: true\r\n        });\r\n    }\r\n\r\n    generatedList = () => {\r\n        var arr = [];\r\n        while(arr.length < 3){\r\n            var r = Math.floor(Math.random() * 118) + 1;\r\n            if(arr.indexOf(r) === -1) arr.push(r);\r\n        }\r\n        this.setSelectedElements(arr);\r\n    }\r\n\r\n    setSelectedElements(arr){\r\n        \r\n        this.setState({\r\n            selectedElements: arr\r\n        });\r\n        if (!this.state.generatedSelectedElements){\r\n            this.setGeneratedSelectedElements();\r\n        }\r\n    }\r\n\r\n    frameOfMatrix = (position, contend) => {\r\n        return(\r\n            <div className = {`row matrixFrame ${position}`}>\r\n                {contend}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    numberOfColumns = () => {\r\n        const columnsQuantity = this.matrixFormat[0].length+2 // (vertex)\r\n        const listOfColumnsId = Array.apply(null, {length: columnsQuantity}).map(Number.call, Number)\r\n        return(\r\n            <div className='row'>\r\n            {\r\n                listOfColumnsId.map((column, position)=>{\r\n                    if (position === 0 || position === 19 ){\r\n                        return this.frameOfMatrix('vertex',null)\r\n                    }\r\n                    else{\r\n                        return this.frameOfMatrix('numberOfColumn',position)\r\n                    }\r\n                })\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    matrixRows = () => {\r\n\r\n        return this.matrixFormat.map((rowFormat, position)=>{\r\n\r\n            var pos = undefined\r\n            if (position <= 6)\r\n                pos = position+1\r\n            else  \r\n                pos = null\r\n            return(\r\n                <div className=\"row\">\r\n                    {this.frameOfMatrix('numberOfRow',pos)}\r\n                    {rowFormat.map((cellIndex)=>{\r\n                        return(\r\n                            <Square\r\n                                positionOfSquareInFormat = {cellIndex}\r\n                                selectedElements= {this.state.selectedElements}\r\n                                updateSelectedElements = {this.updateSelectedElements}\r\n                                lenguage = {this.props.lenguage}\r\n                            />\r\n                        )\r\n                    })}\r\n                    {this.frameOfMatrix('numberOfRow',pos)}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        \r\n        if(this.state.generatedSelectedElements === false){\r\n            this.generatedList()\r\n        }\r\n\r\n        return(\r\n            <div className=\"periodic-table\">\r\n                <div className=\"table\">\r\n                {this.numberOfColumns()}\r\n                {this.matrixRows()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default Matrix;","import React, {Component} from 'react';\r\nimport './../css/appHeader.css';\r\nimport './../css/index.css';\r\n\r\nclass AppHeader extends Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            title : undefined,\r\n            language : undefined\r\n        }\r\n        this.setTitle = this.setTitle.bind(this);\r\n        this.toggleLanguage = this.toggleLanguage.bind(this);\r\n    }\r\n\r\n    setTitle = () => {\r\n        const title = this.props.text.elements.find(\r\n            item => item.id === \"title\"\r\n        )\r\n        \r\n        this.setState({\r\n            title: title.text\r\n        });\r\n    }\r\n\r\n    toggleLanguage = (language) => {\r\n        this.setState({\r\n            language : language\r\n        });\r\n    }\r\n\r\n    setLanguage = () => {\r\n        \r\n        this.toggleLanguage(this.props.language)\r\n        this.setTitle();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setLanguage()\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n        if (prevProps.language == this.props.language & this.props.language != this.state.language){\r\n            this.setLanguage()\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={'app-header'}>\r\n                <h1 className={'title'}>{this.state.title}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppHeader;","import React, {Component} from 'react';\r\nimport './../css/footer.css';\r\nimport './../css/index.css';\r\n\r\nimport './../css/index.css'\r\nimport './../css/colorsOfTheElements.css'\r\nimport './../css/chemicalElement.css'\r\n\r\n\r\nclass Footer extends Component{\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { \r\n            title : undefined,\r\n            language : undefined\r\n         };\r\n\r\n        this.setTitle = this.setTitle.bind(this);\r\n        this.toggleLanguage = this.toggleLanguage.bind(this);   \r\n    }\r\n\r\n    setTitle = () => {\r\n        const title = this.props.text.elements.find(\r\n            item => item.id === \"title\"\r\n        )\r\n        \r\n        this.setState({\r\n            title: title.text\r\n        });\r\n    }\r\n\r\n    toggleLanguage = (language) => {\r\n        this.setState({\r\n            language : language\r\n        });\r\n    }\r\n\r\n    setLanguage = () => {\r\n        this.toggleLanguage(this.props.language)\r\n        this.setTitle();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setLanguage()\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n        if (prevProps.language == this.props.language & this.props.language != this.state.language){\r\n            this.setLanguage()\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div>\r\n                <div className={'footer'}>\r\n                    <div id=\"settings\" onClick={this.props.setShowSettings}>\r\n                        <h1 className={'title'}>{this.state.title}</h1>\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport './../css/index.css'\r\nimport './../css/colorsOfTheElements.css'\r\nimport './../css/chemicalElement.css'\r\n\r\n\r\nclass Modal extends Component{\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { \r\n            showInstructions: false, \r\n            showHowtoPlay : false, \r\n            showAboutTheAuthor : false, \r\n            showChooseLenguage : false,\r\n            modalTittle : \"Settings\",\r\n            title : undefined,\r\n            language : undefined,\r\n            howToPlay: undefined,\r\n            chooseLanguage : undefined,\r\n            aboutTheAuthor: undefined,\r\n            exit: undefined,\r\n            back: undefined, \r\n\r\n            howToPlay1: undefined,\r\n            howToPlay2: undefined,\r\n            howToPlay3: undefined, \r\n\r\n            language1: undefined, \r\n            language2: undefined\r\n        };\r\n\r\n        this.toggleShowInstructions = this.toggleShowInstructions.bind(this);\r\n        this.toggleShowHowToPlay = this.toggleShowHowToPlay.bind(this);\r\n        this.toggleShowAboutTheAuthor = this.toggleShowAboutTheAuthor.bind(this);\r\n        this.toggleShowChooseLenguage = this.toggleShowChooseLenguage.bind(this);\r\n        this.toggleModalTittle = this.toggleModalTittle.bind(this);\r\n        this.setTitle = this.setTitle.bind(this);\r\n        this.toggleLanguage = this.toggleLanguage.bind(this);\r\n    }\r\n\r\n    returnElement = (elementTitle) => {\r\n        \r\n        const element = this.props.text.elements.find(\r\n            item => item.id === elementTitle\r\n        )\r\n        return element\r\n    }\r\n\r\n    setTitle = (changeLanguage) => {\r\n        const title = this.returnElement(\"modalTitle\");\r\n        const howToPlay = this.returnElement(\"howToPlayTitle\");\r\n        const chooseLanguage = this.returnElement(\"languageTitle\");\r\n        const aboutTheAuthor = this.returnElement(\"aboutTheAuthorTitle\");\r\n        const exit = this.returnElement(\"exitTitle\");\r\n        const back = this.returnElement(\"back\");\r\n\r\n        const instructionHowToPlay1 = this.returnElement(\"instructionHowToPlay1\");\r\n        const instructionHowToPlay2 = this.returnElement(\"instructionHowToPlay2\");\r\n        const instructionHowToPlay3 = this.returnElement(\"instructionHowToPlay3\");\r\n\r\n        const language1 = this.returnElement(\"language1\");\r\n        const language2 = this.returnElement(\"language2\");\r\n\r\n        const author1 = this.returnElement(\"author1\");\r\n        const author2 = this.returnElement(\"author2\");\r\n\r\n\r\n\r\n        const modalTitle = changeLanguage ? chooseLanguage.text : title.text\r\n\r\n        this.setState({\r\n            title: title.text,\r\n            modalTittle : modalTitle,\r\n            howToPlay: howToPlay.text,\r\n            chooseLanguage: chooseLanguage.text,\r\n            aboutTheAuthor: aboutTheAuthor.text,\r\n            exit: exit.text,\r\n            back: back.text,\r\n\r\n            instructionHowToPlay1 : instructionHowToPlay1.text,\r\n            instructionHowToPlay2 : instructionHowToPlay2.text,\r\n            instructionHowToPlay3 : instructionHowToPlay3.text, \r\n            \r\n            language1: language1.text,\r\n            language2: language2.text, \r\n\r\n            author1: author1.text,\r\n            author2: author2.text\r\n        });\r\n    }\r\n\r\n    toggleLanguage = (language) => {\r\n        this.setState({\r\n            language : language\r\n        });\r\n    }\r\n\r\n    setLanguage = (changeLanguage) => {\r\n        \r\n        this.toggleLanguage(this.props.language)\r\n        this.setTitle(changeLanguage);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setLanguage()\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n        console.log(prevProps.language , this.props.language , this.state.language)\r\n        if (prevProps.language == this.props.language & this.props.language != this.state.language){\r\n            this.setLanguage(true)\r\n        }\r\n    }\r\n\r\n    toggleModalTittle(title) {\r\n        const modalTittle = title ? title : this.state.title;\r\n        this.setState({\r\n            modalTittle : modalTittle\r\n        });\r\n    }\r\n\r\n    toggleShowInstructions() {\r\n        this.setState({\r\n            showInstructions : !this.state.showInstructions\r\n        });\r\n    }\r\n\r\n    toggleShowChooseLenguage () {\r\n        this.setState({\r\n            showChooseLenguage : !this.state.showChooseLenguage\r\n        });\r\n        const modalTittle = !this.state.showChooseLenguage ? this.state.chooseLanguage : null;\r\n        this.toggleModalTittle(modalTittle);\r\n    }\r\n\r\n    toggleShowAboutTheAuthor () {\r\n        this.setState({\r\n            showAboutTheAuthor : !this.state.showAboutTheAuthor\r\n        });\r\n        const modalTittle = !this.state.showAboutTheAuthor ? \"Mauro López\" : null;\r\n        this.toggleModalTittle(modalTittle);\r\n    }\r\n\r\n    toggleShowHowToPlay() {\r\n        this.setState({\r\n            showHowtoPlay : !this.state.showHowtoPlay\r\n        });\r\n        const modalTittle = !this.state.showHowtoPlay ? this.state.howToPlay : null;\r\n        this.toggleModalTittle(modalTittle);\r\n    }\r\n\r\n    handleLenguageChange = (changeEvent) => {\r\n        this.props.toggleLenguage(changeEvent.target.value);\r\n    }\r\n\r\n    settings = () => {\r\n        return (\r\n            <div className={'box-body'}>\r\n                {\r\n                    <div className={'box-body-information-footer information amphigens'}\r\n                    onClick={this.toggleShowHowToPlay}>\r\n                    1: {this.state.howToPlay}\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information noble_gases'}\r\n                    onClick={this.toggleShowChooseLenguage}>\r\n                    2: {this.state.chooseLanguage}\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information transition_metals'}\r\n                    onClick={this.toggleShowAboutTheAuthor}>\r\n                    3: {this.state.aboutTheAuthor}\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information metalloids'}\r\n                    onClick={this.props.setShowSettings}>\r\n                    {this.state.exit}\r\n                    </div>  \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    howToPlay = () => {\r\n        return (\r\n            <div className={'box-body'}>\r\n                {\r\n                    <div className={'box-body-information-footer information amphigens'}>\r\n                    1: {this.state.instructionHowToPlay1}\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information noble_gases'}>\r\n                    2: {this.state.instructionHowToPlay2}\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information transition_metals'}>\r\n                    3: {this.state.instructionHowToPlay3}\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information transition_metals'}\r\n                    onClick={this.toggleShowHowToPlay}>\r\n                    {this.state.back}\r\n                    </div>  \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    lenguage = () => {\r\n        return (\r\n            <div className={'box-body'}>\r\n                {\r\n                    <div className={'box-body-information-footer information amphigens'}>\r\n                    <div></div>\r\n                    \r\n                    <input type=\"radio\" id=\"lenguage1\" name=\"lenguage\" value=\"Spanish\" \r\n                    checked = {this.props.language === \"Spanish\"}\r\n                    onChange= {this.handleLenguageChange}></input>\r\n                    <label for=\"lenguage1\">{this.state.language1}</label>\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information noble_gases'}>\r\n                    \r\n                    <input type=\"radio\" id=\"lenguage2\" name=\"lenguage\" value=\"English\"\r\n                    checked = {this.props.language === \"English\"}\r\n                    onChange= {this.handleLenguageChange}>\r\n                    </input>\r\n                    <label for=\"lenguage2\">{this.state.language2}</label>\r\n                    \r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information transition_metals'}\r\n                    onClick={this.toggleShowChooseLenguage}>\r\n                    {this.state.back}\r\n                    </div>  \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    aboutTheAuthor = () => {\r\n        return(\r\n            <div className={'box-body'}>     \r\n                {\r\n                    <div className={'box-body-information-footer information basic_metals'}>\r\n                    {this.state.author1}\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information actinoids'}>\r\n                    {this.state.author2}\r\n                    </div>  \r\n                }\r\n\r\n                {\r\n                    <div className={'box-body-information-footer information amphigens'}>\r\n                    Mail: lopezjimenezmauro05@gmail.com\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information noble_gases'}>\r\n                    Github: MLopezJ\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information transition_metals'}>\r\n                    Twitter: MauroLopezJ\r\n                    </div>  \r\n                }\r\n                {\r\n                    <div className={'box-body-information-footer information metalloids'}\r\n                    onClick={this.toggleShowAboutTheAuthor}>\r\n                    {this.state.back}\r\n                    </div>  \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    modal = () => {\r\n\r\n        return(\r\n            <div>\r\n                <div className={'overlay'} onClick={this.props.setShowSettings}></div>\r\n                <div className={'styleElementModal modal modal-page '}> \r\n                    <div className={'box'}>\r\n                            {\r\n                                <div className={'box-body-information'}>\r\n                                \r\n                                    <div className={'box-header information alkali_metals'}>\r\n                        \r\n                                        <div className={'element-name'}>\r\n                                            {`${this.state.modalTittle}`}\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>  \r\n                            }\r\n\r\n                        <div className={'box-body'}>\r\n                        {this.state.showHowtoPlay ? this.howToPlay() : null }\r\n                        {this.state.showAboutTheAuthor ? this.aboutTheAuthor() : null }\r\n                        {this.state.showChooseLenguage ? this.lenguage() : null }\r\n                        {!this.state.showHowtoPlay && !this.state.showAboutTheAuthor\r\n                        && !this.state.showChooseLenguage ?\r\n                            this.settings() : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        console.log(this.state.showHowtoPlay)\r\n        if (this.props.showSettings){\r\n            return(\r\n                this.modal()\r\n            )\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\nimport Matrix from './Components/Matrix';\r\nimport AppHeader from './Components/AppHeader';\r\nimport Footer from './Components/Footer';\r\nimport Instructions from './Components/Instructions';\r\n//import './App.css';\r\nimport './css/index.css'\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n        showSettings: true,\r\n        language: \"Spanish\",\r\n        text : require('./Data/textSpanish.json')\r\n    }\r\n    this.setShowSettings = this.setShowSettings.bind(this);\r\n    this.toggleLenguage = this.toggleLenguage.bind(this);\r\n    this.textEnglish = require('./Data/text.json');\r\n    this.textSpanish = require('./Data/textSpanish.json');\r\n}\r\n\r\ntoggleText = () => {\r\n  const text = this.state.language === \"Spanish\" ? this.textSpanish : this.textEnglish;\r\n  \r\n  this.setState({\r\n    text: text\r\n  });\r\n}\r\n\r\nsetShowSettings = () => {\r\n  this.setState({\r\n    showSettings: !this.state.showSettings\r\n  });\r\n}\r\n\r\ntoggleLenguage = (language) => {\r\n  this.setState({\r\n    language: language\r\n  });\r\n}\r\n\r\nchangeLanguage = (language) => {\r\n  this.toggleLenguage(language);\r\n  this.toggleText();\r\n}\r\n\r\ncomponentDidMount = () => {\r\n  this.toggleText();\r\n}\r\n\r\ncomponentDidUpdate = (prevProps, prevState, snapshot) => {\r\n  \r\n  if(prevState.language !=  this.state.language){\r\n    this.toggleText();\r\n  }\r\n}\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className={'app'}>\r\n        <div className={'app-content'}>\r\n          <AppHeader\r\n            text = {this.state.text.appHeader}\r\n            language = {this.state.language}\r\n          />\r\n          <Matrix\r\n            lenguage = {this.state.language}\r\n          />\r\n          <Footer\r\n            setShowSettings = {this.setShowSettings}\r\n            text = {this.state.text.footer}\r\n            language = {this.state.language}\r\n          />\r\n          <Instructions\r\n            showSettings = {this.state.showSettings}\r\n            setShowSettings = {this.setShowSettings}\r\n            text = {this.state.text.instructions} \r\n            language = {this.state.language}\r\n            toggleLenguage = {this.changeLanguage}\r\n          />\r\n         \r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}